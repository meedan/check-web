stages:
  - build
  - deploy

build_qa:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python3 py3-pip git
    - pip install awscli==1.18.194
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - docker build --build-arg DEPLOY_BRANCH=develop --build-arg TIMESTAMP=$(date '+%Y%m%d%H%M%S') -f production/Dockerfile -t "$ECR_API_BASE_URL/qa/check/web:$CI_COMMIT_SHA"  .
    - docker push "$ECR_API_BASE_URL/qa/check/web:$CI_COMMIT_SHA"
  only:
    - develop

deploy_qa:
  image: python:3-alpine
  stage: deploy
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl jq python3 py3-pip git
    - pip install botocore==1.17.47
    - pip install boto3==1.14.47
    - pip install ecs-deploy==1.11.0
    - ecs deploy ecs-qa  qa-check-web --image qa-check-web-c $ECR_API_BASE_URL/qa/check/web:$CI_COMMIT_SHA -r arn:aws:iam::848416313321:role/ECSSecretsAccessRole --timeout 3600
    - echo "new Image was deployed $ECR_API_BASE_URL/qa/check/web:$CI_COMMIT_SHA"
    - curl --fail --output "/dev/null" --silent --show-error -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" -H "Authorization: Bearer ${CF_CACHE_TOKEN}" -H "Content-Type: application/json" --data '{\"files\":[\"https://qa.checkmedia.org/\",\"https://qa.checkmedia.org/js/config.js\"]}'
  only:
    - develop

build_live:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python3 py3-pip git
    - pip install awscli==1.18.194
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - docker build --build-arg DEPLOY_BRANCH=master --build-arg TIMESTAMP=$(date '+%Y%m%d%H%M%S') -f production/Dockerfile -t "$ECR_API_BASE_URL/live/check/web:$CI_COMMIT_SHA"  .
    - docker push "$ECR_API_BASE_URL/live/check/web:$CI_COMMIT_SHA"
  only:
    - master

deploy_live:
  image: python:3-alpine
  stage: deploy
  when: manual
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl jq python3 py3-pip git
    - pip install botocore==1.17.47
    - pip install boto3==1.14.47
    - pip install ecs-deploy==1.11.0
    - ecs deploy ecs-live  live-check-web --image live-check-web-c $ECR_API_BASE_URL/live/check/web:$CI_COMMIT_SHA -r arn:aws:iam::848416313321:role/ECSSecretsAccessRole --timeout 3600
    - echo "new Image was deployed $ECR_API_BASE_URL/live/check/web:$CI_COMMIT_SHA"
    - curl --fail --output "/dev/null" --silent --show-error -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" -H "Authorization: Bearer ${CF_CACHE_TOKEN}" -H "Content-Type: application/json" --data '{\"files\":[\"https://checkmedia.org/\",\"https://checkmedia.org/js/config.js\"]}'
  only:
    - master
