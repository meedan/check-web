{
	"CheckAgreeTerms.agreeTerms": {
		"string": "By signing up, you agree to the {appName} {tosLink} and {ppLink}."
	},
	"ConfirmEmail.content": {
		"string": "Please check your email to verify your account."
	},
	"ConfirmEmail.resendConfirmation": {
		"string": "Resend"
	},
	"ConfirmEmail.title": {
		"string": "Confirm your email"
	},
	"CustomFilter.filterBy": {
		"string": "Filter by"
	},
	"CustomFilter.keywordsLabel": {
		"string": "Type a list of keywords separated by commas"
	},
	"CustomFilter.selectValueLabel": {
		"string": "Select value"
	},
	"CustomTeamTaskFilter.anyValue": {
		"string": "Any value is set",
		"developer_comment": "Label for custom field configuration to allow filtering by task or metadata with any value set"
	},
	"CustomTeamTaskFilter.choiceFilter": {
		"string": "\"{field}\" has value {value}",
		"developer_comment": "Label for custom field when metadata or task response contains specific value"
	},
	"CustomTeamTaskFilter.dateRange": {
		"string": "Date range",
		"developer_comment": "Label for custom field configuration to allow filtering datetime filed with date range option"
	},
	"CustomTeamTaskFilter.empty": {
		"string": "Empty",
		"developer_comment": "Label for custom field configuration to allow filtering by task or metadata with no value set"
	},
	"CustomTeamTaskFilter.entityMetadataLabel": {
		"string": "Select metadata",
		"developer_comment": "Label for input to select specific metadata to filter by"
	},
	"CustomTeamTaskFilter.entityTaskLabel": {
		"string": "Select task",
		"developer_comment": "Label for input to select specific task to filter by"
	},
	"CustomTeamTaskFilter.labelIs": {
		"string": "{title} is",
		"developer_comment": "Label for custom filter field. The title is input by user and can be basically anything."
	},
	"CustomTeamTaskFilter.metadataChoiceLabel": {
		"string": "Metadata has specific value",
		"developer_comment": "Label for custom field configuration to allow filtering by metadata value"
	},
	"CustomTeamTaskFilter.metadataTextLabel": {
		"string": "Metadata value",
		"developer_comment": "Label for custom field to allow configuration filtering by metadata keyword"
	},
	"CustomTeamTaskFilter.noValue": {
		"string": "No value is set",
		"developer_comment": "Label for custom field configuration to allow filtering by task or metadata with no value set"
	},
	"CustomTeamTaskFilter.notEmpty": {
		"string": "Not empty",
		"developer_comment": "Label for custom field configuration to allow filtering by task or metadata with any value set"
	},
	"CustomTeamTaskFilter.numericRange": {
		"string": "Number range",
		"developer_comment": "Label for custom field configuration to allow filtering number filed with numeric range option"
	},
	"CustomTeamTaskFilter.taskChoiceLabel": {
		"string": "Task has specific answer",
		"developer_comment": "Label for custom field configuration to allow filtering by task answer"
	},
	"CustomTeamTaskFilter.taskTextLabel": {
		"string": "Task answer",
		"developer_comment": "Label for custom field configuration to allow filtering by task keyword"
	},
	"CustomTeamTaskFilter.textAnyValue": {
		"string": "\"{field}\" contains any value",
		"developer_comment": "Label for custom field when metadata or task response contains any value"
	},
	"CustomTeamTaskFilter.textFilter": {
		"string": "\"{field}\" contains {value}",
		"developer_comment": "Label for custom field when metadata or task response contains keyword"
	},
	"CustomTeamTaskFilter.textNoValue": {
		"string": "\"{field}\" contains no value",
		"developer_comment": "Label for custom field when metadata or task response contains no value"
	},
	"FilterPopup.close": {
		"string": "Done"
	},
	"ImportedReports.title": {
		"string": "Imported reports"
	},
	"ItemHistoryDialog.title": {
		"string": "Item history"
	},
	"MultiSelector.all": {
		"string": "Search All"
	},
	"MultiSelector.search": {
		"string": "Search…"
	},
	"SearchFieldChannel.label": {
		"string": "Channel is",
		"developer_comment": "Prefix label for field to filter by item channel"
	},
	"SearchFieldClusterTeams.label": {
		"string": "Organization is",
		"developer_comment": "Prefix label for field to filter by workspace"
	},
	"UserConfirmPage.alreadyConfirmed": {
		"string": "Account Already Confirmed",
		"developer_comment": "Message for accounts already confirmed"
	},
	"UserConfirmPage.confirmed": {
		"string": "Account Confirmed",
		"developer_comment": "Message for confirmed accounts"
	},
	"UserConnectedAccount.addAnother": {
		"string": "Add another account"
	},
	"UserConnectedAccount.connectButton": {
		"string": "Connect"
	},
	"UserConnectedAccount.disconnectAccountConfirmationText": {
		"string": "Are you sure? This will disconnect login account."
	},
	"UserConnectedAccount.disconnectAccountTitle": {
		"string": "Disconnect account"
	},
	"UserConnectedAccount.disconnectButton": {
		"string": "Disconnect"
	},
	"UserMenu.about": {
		"string": "About"
	},
	"UserMenu.pp": {
		"string": "Privacy policy"
	},
	"UserMenu.signOut": {
		"string": "Sign Out"
	},
	"UserMenu.tos": {
		"string": "Terms of service"
	},
	"UserMenu.training": {
		"string": "Training and documentation"
	},
	"UserMenu.userSettings": {
		"string": "User settings"
	},
	"UserPrivacy.deleteAccount": {
		"string": "Delete Account"
	},
	"UserSecurity.passwordError": {
		"string": "Incorrect password"
	},
	"UserSecurity.passwordInput": {
		"string": "Current Password"
	},
	"UserSecurity.verifyError": {
		"string": "Incorrect validation code"
	},
	"UserSecurity.verifyInput": {
		"string": "Validation Code"
	},
	"UserUtil.admin": {
		"string": "Admin"
	},
	"UserUtil.collaborator": {
		"string": "Collaborator"
	},
	"UserUtil.editor": {
		"string": "Editor"
	},
	"addAnnotation.addFile": {
		"string": "Add a file"
	},
	"addAnnotation.error": {
		"string": "Sorry, an error occurred while updating the item. Please try again and contact {supportEmail} if the condition persists."
	},
	"addAnnotation.inputEditHint": {
		"string": "Edit note"
	},
	"addAnnotation.inputHint": {
		"string": "Add a note"
	},
	"addAnnotation.invalidCommand": {
		"string": "Invalid command"
	},
	"addAnnotation.submitButton": {
		"string": "Submit"
	},
	"addFilterMenu.Workspace": {
		"string": "Organization",
		"developer_comment": "Menu option to enable searching items by workspace"
	},
	"addFilterMenu.addFilter": {
		"string": "Add filter",
		"developer_comment": "Button that opens menu with filter field options"
	},
	"addFilterMenu.annotatedBy": {
		"string": "Annotated by",
		"developer_comment": "Menu option to enable searching items by annotated by"
	},
	"addFilterMenu.annotation": {
		"string": "Annotation",
		"developer_comment": "Menu option to enable searching items by annotation fields"
	},
	"addFilterMenu.assignedTo": {
		"string": "Assignment",
		"developer_comment": "Menu option to enable searching items by assigned users"
	},
	"addFilterMenu.channel": {
		"string": "Channel",
		"developer_comment": "Menu option to enable searching items by channel"
	},
	"addFilterMenu.claim": {
		"string": "അവകാശവാദം",
		"developer_comment": "Menu option to enable searching items by claim"
	},
	"addFilterMenu.collection": {
		"string": "Collection",
		"developer_comment": "Menu option to enable searching items by collection"
	},
	"addFilterMenu.createdBy": {
		"string": "Created by",
		"developer_comment": "Menu option to enable searching items by author"
	},
	"addFilterMenu.filterBy": {
		"string": "Filter by",
		"developer_comment": "Header to menu of filter field types"
	},
	"addFilterMenu.folder": {
		"string": "Folder",
		"developer_comment": "Menu option to enable searching items by folder"
	},
	"addFilterMenu.itemRead": {
		"string": "Item read/unread",
		"developer_comment": "Menu option to enable searching items by item read/unread"
	},
	"addFilterMenu.itemStatus": {
		"string": "Item status",
		"developer_comment": "Menu option to enable searching items by item status"
	},
	"addFilterMenu.language": {
		"string": "Language",
		"developer_comment": "Menu option to enable searching items by language"
	},
	"addFilterMenu.mediaType": {
		"string": "Media type",
		"developer_comment": "Menu option to enable searching items by media type"
	},
	"addFilterMenu.publishedBy": {
		"string": "Published by",
		"developer_comment": "Menu option to enable searching items by report published by"
	},
	"addFilterMenu.reportStatus": {
		"string": "Report status",
		"developer_comment": "Menu option to enable searching items by report status"
	},
	"addFilterMenu.similarMedias": {
		"string": "Number of similar medias",
		"developer_comment": "Menu option to enable searching items by similar medias"
	},
	"addFilterMenu.source": {
		"string": "ഉറവിടം",
		"developer_comment": "Menu option to enable searching items by source"
	},
	"addFilterMenu.suggestedMedias": {
		"string": "Number of suggested medias",
		"developer_comment": "Menu option to enable searching items by suggested medias"
	},
	"addFilterMenu.tag": {
		"string": "ടാഗ്",
		"developer_comment": "Menu option to enable searching items by tags"
	},
	"addFilterMenu.timeRange": {
		"string": "Date range",
		"developer_comment": "Menu option to enable searching items by date range"
	},
	"addFilterMenu.tiplineRequest": {
		"string": "Tipline request",
		"developer_comment": "Menu option to enable searching items by confirmed/unconfirmed items"
	},
	"addFilterMenu.tiplineRequests": {
		"string": "Number of tipline requests",
		"developer_comment": "Menu option to enable searching items by tipline requests"
	},
	"addLanguageAction.addLanguage": {
		"string": "Add language"
	},
	"addLanguageAction.newLanguage": {
		"string": "New language"
	},
	"addLanguageAction.optionLabel": {
		"string": "{languageName} ({languageCode})"
	},
	"addLanguageAction.selectLanguage": {
		"string": "Select a language"
	},
	"addLanguageAction.title": {
		"string": "Choose a new language"
	},
	"annotation.addLanguage": {
		"string": "Language {value} added by {author}",
		"developer_comment": "Log entry indicating an item language has been set. {value} receives language name"
	},
	"annotation.addSource": {
		"string": "Source {name} add by {author}",
		"developer_comment": "Log entry indicating a source has been added"
	},
	"annotation.addedComment": {
		"string": "Task note added by {author}: {title}{note}"
	},
	"annotation.archiverWait": {
		"string": "This item is being archived at {name}. The archive link will be displayed here when it's ready."
	},
	"annotation.assignmentChanged": {
		"string": "Task assigned to {assigneeTo} by {author}: {title}"
	},
	"annotation.assignmentRemoved": {
		"string": "Task unassigned from {assigneeFrom} by {author}: {title}"
	},
	"annotation.changedJsonSchema": {
		"string": "JSON Schema of task {title} changed by {author}"
	},
	"annotation.createClaimContext": {
		"string": "Additional content added by {author}: {value}",
		"developer_comment": "Log entry indicating additional content has been added"
	},
	"annotation.createClaimDescription": {
		"string": "Claim added by {author}: {value}",
		"developer_comment": "Log entry indicating a claim has been added"
	},
	"annotation.createFactCheck": {
		"string": "Fact-check title added by {author}: {value}",
		"developer_comment": "Log entry indicating fact-check title has been added"
	},
	"annotation.createProjectMedia": {
		"string": "Item created by {author}",
		"developer_comment": "Log entry indicating an item has been created"
	},
	"annotation.deleteButton": {
		"string": "Delete",
		"developer_comment": "Menu item for deleting an annotation"
	},
	"annotation.editButton": {
		"string": "Edit"
	},
	"annotation.editedBy": {
		"string": "edited by",
		"developer_comment": "Fact-check in edited state"
	},
	"annotation.embedLabelRemoved": {
		"string": "Item title removed by {author}: {title}"
	},
	"annotation.embedLabelUpdated": {
		"string": "Item title edited by {author}: {title}"
	},
	"annotation.embedNoteCreated": {
		"string": "Item description added by {author}: {description}"
	},
	"annotation.embedNoteRemoved": {
		"string": "Item description removed by {author}: {description}"
	},
	"annotation.embedNoteUpdated": {
		"string": "Item description edited by {author}: {description}"
	},
	"annotation.mediaAssigned": {
		"string": "Item assigned to {name} by {author}",
		"developer_comment": "Log entry indicating an item has been assigned"
	},
	"annotation.mediaAssignmentCreated": {
		"string": "Item assigned to {name} by {author}",
		"developer_comment": "Log entry indicating an item has been assigned"
	},
	"annotation.mediaAssignmentDeleted": {
		"string": "Item unassigned from {name} by {author}",
		"developer_comment": "Log entry indicating an item has been unassigned"
	},
	"annotation.mediaUnassigned": {
		"string": "Item unassigned from {name} by {author}",
		"developer_comment": "Log entry indicating an item has been unassigned"
	},
	"annotation.menuTooltip": {
		"string": "Annotation actions",
		"developer_comment": "Tooltip for the annotation actions menu icon button"
	},
	"annotation.metadataCreated": {
		"string": "Annotation field created by {author}: {fieldLabel}",
		"developer_comment": "Log entry indicating an annotation field was created"
	},
	"annotation.metadataResponse": {
		"string": "Annotation \"{fieldLabel}\" edited by {author}: {response}",
		"developer_comment": "Log entry indicating an annotation response has been changed"
	},
	"annotation.newReport": {
		"string": "Item added by {author}"
	},
	"annotation.noAnnotationsYet": {
		"string": "No activity"
	},
	"annotation.openInSlack": {
		"string": "Open in Slack"
	},
	"annotation.pausedBy": {
		"string": "paused by",
		"developer_comment": "Fact-check in paused state"
	},
	"annotation.permalink": {
		"string": "Permalink",
		"developer_comment": "Menu item for getting a permanent url for an annotaion"
	},
	"annotation.publishedBy": {
		"string": "published by",
		"developer_comment": "Fact-check in published state"
	},
	"annotation.removedComment": {
		"string": "Task note deleted by {author}: {title}{note}"
	},
	"annotation.reportDesignState": {
		"string": "Fact-check report {state} {author}",
		"developer_comment": "Log entry indicating a report state has changed. Example: Fact-check report [edited by|paused by|published by] author"
	},
	"annotation.reportReceived": {
		"string": "Report sent on {date}"
	},
	"annotation.reportUpdateReceived": {
		"string": "Report update sent on {date}"
	},
	"annotation.similarCreated": {
		"string": "Match confirmed by {author}: {title}",
		"developer_comment": "Log entry indicating a similarity match was confirmed"
	},
	"annotation.similarDestroyed": {
		"string": "Match deleted by {author}: {title}",
		"developer_comment": "Tells that one item previously confirmed as similar has been detached from current item."
	},
	"annotation.smoochNoMessage": {
		"string": "No message was sent with the request"
	},
	"annotation.statusLocked": {
		"string": "Item status locked by {author}",
		"developer_comment": "Log entry indicating an item status has been locked"
	},
	"annotation.statusSetHeader": {
		"string": "Status changed to {status} by {author}",
		"developer_comment": "Log entry indicating an item status has been changed"
	},
	"annotation.statusUnlocked": {
		"string": "Item status unlocked by {author}",
		"developer_comment": "Log entry indicating an item status has been unlocked"
	},
	"annotation.suggestionCreated": {
		"string": "Match suggested by {author}: {title}",
		"developer_comment": "Log entry indicating a similarity match was suggested"
	},
	"annotation.suggestionDestroyed": {
		"string": "Match rejected by {author}: {title}",
		"developer_comment": "Log entry indicating a similarity match was rejected"
	},
	"annotation.taggedHeader": {
		"string": "Tag #{tag} added by {author}",
		"developer_comment": "Log entry indicating a tag was added"
	},
	"annotation.taskAssignmentCreated": {
		"string": "Task assigned to {name} by {author}: {title}",
		"developer_comment": "Log entry indicating a task has been assigned"
	},
	"annotation.taskAssignmentDeleted": {
		"string": "Task unassigned from {name} by {author}: {title}",
		"developer_comment": "Log entry indicating a task has been unassigned"
	},
	"annotation.taskLabelUpdated": {
		"string": "Task edited by {author}: {title}"
	},
	"annotation.taskNoteCreated": {
		"string": "Task note added by {author}: {title}{note}"
	},
	"annotation.taskNoteUpdated": {
		"string": "Task note edited by {author}: {title}{note}"
	},
	"annotation.titleChanged": {
		"string": "Item title edited by {author}: {title}"
	},
	"annotation.unknownLanguage": {
		"string": "Unknown language",
		"developer_comment": "Show label for undefined language"
	},
	"annotation.updateClaimContext": {
		"string": "Additional content edited by {author}: {value}",
		"developer_comment": "Log entry indicating the additional content has been edited"
	},
	"annotation.updateClaimDescription": {
		"string": "Claim edited by {author}: {value}",
		"developer_comment": "Log entry indicating a claim has been edited"
	},
	"annotation.updateLanguage": {
		"string": "Language {value} updated by {author}",
		"developer_comment": "Log entry indicating an item language has been updated. {value} receives language name"
	},
	"annotation.updateSource": {
		"string": "Source {name} updated by {author}",
		"developer_comment": "Log entry indicating an item status has been changed"
	},
	"annotations.loadMore": {
		"string": "Load more"
	},
	"attribution.noResults": {
		"string": "No results"
	},
	"attribution.search": {
		"string": "Search members"
	},
	"autoCompleteMediaItem.cantSelectPublished": {
		"string": "Media cannot be imported from items that have their report published"
	},
	"autoCompleteMediaItem.error": {
		"string": "Sorry, an error occurred while searching. Please try again and contact {supportEmail} if the condition persists."
	},
	"autoCompleteMediaItem.notFound": {
		"string": "No matches found"
	},
	"autoCompleteMediaItem.results": {
		"string": "{count, plural, one {# result} other {# results}}"
	},
	"autoCompleteMediaItem.searchItem": {
		"string": "Search"
	},
	"autoCompleteMediaItem.searchSettings": {
		"string": "Search settings"
	},
	"autoCompleteMediaItem.searching": {
		"string": "Searching…"
	},
	"blankMediaButton.addItem": {
		"string": "Add item"
	},
	"blankMediaButton.addToImportedReport": {
		"string": "Add to imported report"
	},
	"blankMediaButton.addToReport": {
		"string": "Add to report"
	},
	"blankMediaButton.defaultErrorMessage": {
		"string": "Could not save item"
	},
	"browserSupport.message": {
		"string": "{appName} is optimized for Google Chrome on desktop."
	},
	"bulkActions.dialogMoveTitle": {
		"string": "{mediasCount, plural, one {You need to move 1 item to another folder} other {You need to move # items to another folder}}"
	},
	"bulkActions.moveTitle": {
		"string": "Move to folder",
		"developer_comment": "Label for button to commit action of moving item to the selected folder"
	},
	"bulkActions.moveToSpamSuccessfully": {
		"string": "Items moved to the Spam."
	},
	"bulkActions.moveToTrashSuccessfully": {
		"string": "Items moved to the Trash."
	},
	"bulkActions.movedFromSpamSuccessfully": {
		"string": "Items moved from Spam to '{toProject}'",
		"developer_comment": "Banner displayed after items are moved successfully"
	},
	"bulkActions.movedRestoreSuccessfully": {
		"string": "Items moved from Trash to '{toProject}'",
		"developer_comment": "Banner displayed after items are moved successfully"
	},
	"bulkActions.movedSuccessfully": {
		"string": "Items moved to '{toProject}'",
		"developer_comment": "Banner displayed after items are moved successfully"
	},
	"bulkActions.notSpam": {
		"string": "Not Spam"
	},
	"bulkActions.restore": {
		"string": "Restore from Trash"
	},
	"bulkActions.sendItemsToSpam": {
		"string": "Mark as spam"
	},
	"bulkActions.sendItemsToTrash": {
		"string": "Send to trash"
	},
	"bulkActions.spam": {
		"string": "Mark selected items as not spam and move them to another folder",
		"developer_comment": "Tooltip message for button that mark items as not spam"
	},
	"bulkActions.trash": {
		"string": "Restore selected items and move them to another folder",
		"developer_comment": "Tooltip message for button that restores items from Trash"
	},
	"bulkActionsAssign.assignmentNotes": {
		"string": "Add a note to email notification",
		"developer_comment": "Field for adding complementary information for the assignee"
	},
	"bulkActionsAssign.notFound": {
		"string": "No members found",
		"developer_comment": "Displayed when no member names match search input"
	},
	"bulkActionsAssign.submitLabel": {
		"string": "{numItems, plural, one {Assign 1 item} other {Assign # items}}",
		"developer_comment": "Button for commiting the action of assigning of a number of items in bulk"
	},
	"bulkActionsAssign.success": {
		"string": "Items assigned successfully",
		"developer_comment": "Success message for bulk assignment action"
	},
	"bulkActionsMenu.action": {
		"string": "Action",
		"developer_comment": "Button for popping the actions menu. User has to pick which action to perform upon currently selected items."
	},
	"bulkActionsMenu.assign": {
		"string": "Assign",
		"developer_comment": "Menu option for bulk assigning selected items"
	},
	"bulkActionsMenu.changeStatus": {
		"string": "Change status",
		"developer_comment": "Menu option for bulk changing statuses of selected items"
	},
	"bulkActionsMenu.moveToFolder": {
		"string": "Move to folder",
		"developer_comment": "Menu option for bulk moving selected items into a folder"
	},
	"bulkActionsMenu.tag": {
		"string": "ടാഗ്",
		"developer_comment": "Menu option for bulk tagging selected items"
	},
	"bulkActionsMove.notFound": {
		"string": "No folders found",
		"developer_comment": "Displayed when no folder names match search input"
	},
	"bulkActionsMove.submitLabel": {
		"string": "{numItems, plural, one {Move 1 item} other {Move # items}}",
		"developer_comment": "Button for commiting the action of moving of a number of items in bulk"
	},
	"bulkActionsStatus.dialogBody": {
		"string": "{publishedCount, plural, one {The status of 1 item could not be changed because its report is currently published. Please edit it individually.} other {The status of # items could not be changed because their reports are currently published. Please edit them individually.}}",
		"developer_comment": "Body of dialog warning that bulk updating item statuses could not be performed entirely"
	},
	"bulkActionsStatus.dialogTitle": {
		"string": "Some statuses could not be changed",
		"developer_comment": "Title of dialog warning after bulk updating item statuses"
	},
	"bulkActionsStatus.submitLabel": {
		"string": "{numItems, plural, one {Set status of 1 item} other {Set status of # items}}",
		"developer_comment": "Button for commiting the action of setting status of a number of items in bulk"
	},
	"bulkActionsStatus.success": {
		"string": "Item statuses changed successfully",
		"developer_comment": "Success message for bulk status change action"
	},
	"bulkActionsTag.submitLabel": {
		"string": "{numItems, plural, one {Tag 1 item} other {Tag # items}}",
		"developer_comment": "Button for commiting the action of tagging of a number of items in bulk"
	},
	"bulkActionsTag.success": {
		"string": "Items tagged successfully",
		"developer_comment": "Success message for bulk tagging actions"
	},
	"changeMediaSource.cancelButton": {
		"string": "Cancel",
		"developer_comment": "Cancel change media source action"
	},
	"changeMediaSource.choose": {
		"string": "Choose a source",
		"developer_comment": "Change media source label"
	},
	"changeMediaSource.createSource": {
		"string": "Create new",
		"developer_comment": "allow user to create a new source"
	},
	"changeMediaSource.saveButton": {
		"string": "Save",
		"developer_comment": "Save media source label"
	},
	"changeUserRole.changingTo": {
		"string": "You will be changing {userLabel}'s role to {newRole}."
	},
	"changeUserRole.dialogTitle": {
		"string": "Are you sure you want to change {userLabel}'s role from {currentRole} to {newRole}?"
	},
	"changeUserRole.helpCenter": {
		"string": "Help Center"
	},
	"changeUserRole.learnMore": {
		"string": "To learn more about permissions for the {newRole} role, see the article about role permissions in our {helpCenterLink}."
	},
	"changeUserRole.proceedLabel": {
		"string": "Change role to {newRole}"
	},
	"check.error.auth": {
		"string": "An authentication error occurred.",
		"developer_comment": "This is a message that displays in an error popup if the client is unable to authenticate (log in)."
	},
	"check.error.conflict": {
		"string": "There was a database conflict. Maybe some other user already performed this action. Please reload the page.",
		"developer_comment": "This is a message that displays in an error popup if the server returns an error involving some kind of conflicting data."
	},
	"check.error.duplicated": {
		"string": "You're trying to create a record that already exists.",
		"developer_comment": "This is a message that displays in an error popup if the client tries to create an item but the database already has a record of it."
	},
	"check.error.id_not_found": {
		"string": "A requested ID was not found.",
		"developer_comment": "This is a message that displays in an error popup if the client sent a request to the server with an identifying number that was not found in the database."
	},
	"check.error.invalid_value": {
		"string": "An invalid value was sent to the server.",
		"developer_comment": "This is a message that displays in an error popup if the client sent a request to the server with an invalid value of some kind, such as a malformed email address."
	},
	"check.error.missing_object": {
		"string": "An object is missing in the database.",
		"developer_comment": "This is a message that displays in an error popup if the server cannot find an object that was requested by the client."
	},
	"check.error.missing_parameters": {
		"string": "The API call was missing parameters.",
		"developer_comment": "This is a message that displays in an error popup if the client sent a request to the server that was missing URL parameters."
	},
	"check.error.published": {
		"string": "You can't change the status of a published item.",
		"developer_comment": "This is a message that displays in an error popup if the user manages to ask the server to change the status on an item that has already been published."
	},
	"check.error.two_factor_auth": {
		"string": "You need to log in using two factor authentication.",
		"developer_comment": "This is a message that displays in an error popup if the client tries to access the application, but they are not yet authenticated by two factor authentication."
	},
	"check.error.unauthorized": {
		"string": "You are not authorized to see this content. Please contact your workspace administrator if you need permission.",
		"developer_comment": "This is a message that displays in an error popup if the user tries to access data that they do not have permission to access."
	},
	"check.error.unknown": {
		"string": "There was an error we can't identify.",
		"developer_comment": "This is a message that displays in an error popup if the server returns an error that we haven't previously classified. This is the default error shown if we can't figure out what sort of error to show the user."
	},
	"check.error.warning": {
		"string": "The server returned a warning.",
		"developer_comment": "This is a message that displays in an error popup if the server sends it some kind of non-critical warning message (user is approaching their API call limit, for example)."
	},
	"check.helpers.intercom_help": {
		"string": "Click the 'send' arrow to the right to send the report.",
		"developer_comment": "This is text that will appear when the user opens the third-party application to file a bug report with our customer service. The arrow will be to the right side of the text regardless of whether this is a left-to-right or a right-to-left language."
	},
	"check.helpers.more_info": {
		"string": "More info…",
		"developer_comment": "This is a label on a button that users press in order to get more info related to an error message."
	},
	"check.helpers.report_issue": {
		"string": "Report issue",
		"developer_comment": "This is a label on a button that appears in an error popup. When the user presses the button, another popup opens that allows the user to report an issue to customer service."
	},
	"check.tasks.contact_support": {
		"string": "Contact support",
		"developer_comment": "This is a label on a button that appears in a warning message. When the user presses the button, another popup opens that allows the user to contact customer service."
	},
	"check.tasks.discontinued_tasks_warning": {
		"string": "Important! Tasks will be discontinued on June 1st, 2022. Please reach out to support if you have any questions on how to replace them with Annotations.",
		"developer_comment": "This is a warning message to users of the Tasks feature, which will be removed from our software on June 1, 2022."
	},
	"checkedByTeamsCell.more": {
		"string": "+{number} more",
		"developer_comment": "Table cell displayed on Trends page showing how many more workspaces fact-checked this item but their names were omitted from display"
	},
	"checkedByTeamsCell.noFactCheck": {
		"string": "No fact-check",
		"developer_comment": "Table cell displayed on feed page when claim is not fact-checked yet"
	},
	"confirmProceedDialog.confirmationText": {
		"string": "Type \"{text}\" to confirm."
	},
	"confirmProceedDialog.confirmationTextPlaceholder": {
		"string": "Type here"
	},
	"confirmProceedDialog.continue": {
		"string": "Continue"
	},
	"contentScreen.adult": {
		"string": "Adult",
		"developer_comment": "Content warning type: Adult"
	},
	"contentScreen.hideContentButton": {
		"string": "Hide content",
		"developer_comment": "Button to disable view of sensitive content"
	},
	"contentScreen.medical": {
		"string": "Medical",
		"developer_comment": "Content warning type: Medical"
	},
	"contentScreen.viewContentButton": {
		"string": "Temporarily view content",
		"developer_comment": "Button to enable view of sensitive content"
	},
	"contentScreen.violence": {
		"string": "Violence",
		"developer_comment": "Content warning type: Violence"
	},
	"contentScreen.warning": {
		"string": "<strong>{user_name}</strong> has detected this content as <strong>{warning_category}</strong>",
		"developer_comment": "Content warning displayed over sensitive content"
	},
	"createMedia.addItem": {
		"string": "Add Item"
	},
	"createMedia.addNew": {
		"string": "Add new item"
	},
	"createMedia.addNewItem": {
		"string": "Add item"
	},
	"createMedia.error": {
		"string": "Sorry, an error occurred while submitting the item. Please try again and contact {supportEmail} if the condition persists."
	},
	"createMedia.existing": {
		"string": "Add existing item"
	},
	"createMedia.media.media": {
		"string": "Media"
	},
	"createMedia.mediaClaim": {
		"string": "Type something"
	},
	"createMedia.mediaClaimDescription": {
		"string": "Claim description"
	},
	"createMedia.mediaClaimDescriptionSubtitle": {
		"string": "A description of the claim that needs to be reviewed."
	},
	"createMedia.mediaInput": {
		"string": "Add a URL to a social media post or webpage, or a block of text."
	},
	"createMedia.mediaMediaSubtitle": {
		"string": "The media that contains the claim."
	},
	"createMedia.mediaRemoveFile": {
		"string": "Remove file",
		"developer_comment": "Label on a button that the user clicks in order to return a file upload box back to its 'empty' state."
	},
	"createMedia.or": {
		"string": "or",
		"developer_comment": "This will appear between two mutually exclusive inputs. If the user fills in one, then the other will be disabled."
	},
	"createMediaSource.createSource": {
		"string": "Create source",
		"developer_comment": "Label for button to create a new source"
	},
	"createTag.couldNotCreate": {
		"string": "Could not create tag",
		"developer_comment": "Error message displayed when it's not possible to create a team tag"
	},
	"createTag.createdSuccessfully": {
		"string": "Tag created successfully",
		"developer_comment": "Message displayed when a team tag is created"
	},
	"createTag.name": {
		"string": "പേര്"
	},
	"createTag.rule": {
		"string": "Automatically tag items matching the following conditions:"
	},
	"createTag.title": {
		"string": "Create new tag"
	},
	"createTeamDialog.cancel": {
		"string": "Cancel"
	},
	"createTeamDialog.create": {
		"string": "Create"
	},
	"createTeamDialog.creating": {
		"string": "Creating…"
	},
	"createTeamDialog.defaultErrorMessage": {
		"string": "Could not create new workspace"
	},
	"createTeamDialog.description": {
		"string": "All settings from this workspace will be duplicated. No content will be added."
	},
	"createTeamDialog.dialogTitleCreate": {
		"string": "Create new workspace",
		"developer_comment": "Dialog title for creating a new workspace"
	},
	"createTeamDialog.dialogTitleDuplicate": {
		"string": "Duplicate workspace"
	},
	"createTeamDialog.duplicating": {
		"string": "Duplicating…"
	},
	"createTeamDialog.duplice": {
		"string": "Duplicate"
	},
	"createTeamDialog.name": {
		"string": "Workspace name"
	},
	"createTeamDialog.url": {
		"string": "Workspace URL"
	},
	"createTeamTask.addField": {
		"string": "New annotation field",
		"developer_comment": "Button that triggers creation of a new field"
	},
	"createTeamTask.errorMetadata": {
		"string": "Sorry, an error occurred while updating the metadata field. Please try again and contact {supportEmail} if the condition persists."
	},
	"customAutocomplete.done": {
		"string": "Done",
		"developer_comment": "Label for closing dropdown when user is done selecting tags"
	},
	"customAutocomplete.select": {
		"string": "Select",
		"developer_comment": "Verb. Label for generic dropdown component"
	},
	"customFiltersManager.enterNumber": {
		"string": "enter number"
	},
	"customFiltersManager.errorMessage": {
		"string": "First number should be less than second number",
		"developer_comment": "Message when user set range number with min value greater than max value"
	},
	"customFiltersManager.label": {
		"string": "Metadata is",
		"developer_comment": "Placeholder label for metadata field when not fully configured"
	},
	"datetimeRespondTask.answerTask": {
		"string": "Answer task"
	},
	"datetimeRespondTask.cancelTask": {
		"string": "Cancel"
	},
	"datetimeRespondTask.pickDate": {
		"string": "Pick a date"
	},
	"datetimeRespondTask.time": {
		"string": "Pick a time"
	},
	"datetimeRespondTask.timezone": {
		"string": "Select a timezone"
	},
	"datetimeTaskResponse.invalidTimestamp": {
		"string": "Error: Invalid timestamp"
	},
	"datetimeTaskResponse.timeIs": {
		"string": "View this timezone on time.is"
	},
	"deleteStatusDialog.itemsPublishedMessage": {
		"string": "{publishedCount, plural, one {There  is one item currently published with the status {statusLabel}. If you continue, all published items with this status will be paused. You must review those items to re-publish them.} other {There are # items currently published with the status {statusLabel}. If you continue, all published items with this status will be paused. You must review those items to re-publish them.}}",
		"developer_comment": "Message of a modal that is displayed when a status in use is being deleted."
	},
	"deleteStatusDialog.moveItemsTo": {
		"string": "Move items to",
		"developer_comment": "This is a field label. In this field, a destination status can be set, so, when a status is deleted, all existing items will be moved to this status defined here in this field."
	},
	"deleteStatusDialog.statusInUseMessage": {
		"string": "{itemsCount, plural, one {There is one item with the status {statusLabel} that must be changed to another status before you can delete this status.} other {There are # items with the status {statusLabel} that must be changed to another status before you can delete this status.}}",
		"developer_comment": "Message of a modal that is displayed when a status in use is being deleted."
	},
	"deleteStatusDialog.statusInUseTitle": {
		"string": "{itemsCount, plural, one {You need to change the status of one item to delete this status} other {You need to change the status of # items to delete this status}}",
		"developer_comment": "Title of a modal that is displayed when a status in use is being deleted."
	},
	"deleteStatusDialog.statusNotInUseMessage": {
		"string": "Are you sure you want to delete this status?",
		"developer_comment": "Confirmation message displayed on a modal when a status is deleted from statuses settings page."
	},
	"deleteStatusDialog.statusNotInUseTitle": {
		"string": "Confirm status deletion",
		"developer_comment": "Title displayed on a confirmation modal when a status being deleted is not in used by any item."
	},
	"destinationProjects.choose": {
		"string": "Choose a folder",
		"developer_comment": "Choose a folder input label"
	},
	"destinationProjects.empty": {
		"string": "No folders in this collection"
	},
	"destinationProjects.none": {
		"string": "Not in any collection",
		"developer_comment": "Label used for folders that are not in any collection"
	},
	"detachDialog.detached": {
		"string": "Move to folder",
		"developer_comment": "Button to commit the action of moving item"
	},
	"detachDialog.dialogdetachedToListTitle": {
		"string": "Move detached item to…",
		"developer_comment": "Dialog title prompting user to select a destination folder for the item"
	},
	"editStatusDialog.addButton": {
		"string": "Add status"
	},
	"editStatusDialog.messageDescription": {
		"string": "Send a message to the user who requested the item when you change an item to this status.",
		"developer_comment": "Accompanying description for editStatusDialog.toggleStatusMessage"
	},
	"editStatusDialog.saveStatusMessage": {
		"string": "Any published report with this status will be updated with the new label and paused.",
		"developer_comment": "Confirmation dialog description"
	},
	"editStatusDialog.saveStatusTitle": {
		"string": "Save status",
		"developer_comment": "Confirmation dialog title. 'Save' here is in infinitive form."
	},
	"editStatusDialog.statusDescription": {
		"string": "Description"
	},
	"editStatusDialog.statusMessage": {
		"string": "Message"
	},
	"editStatusDialog.statusTitle": {
		"string": "Status ({maxLength} characters max)"
	},
	"editStatusDialog.title": {
		"string": "Add a new status"
	},
	"editStatusDialog.titleEdit": {
		"string": "Edit status"
	},
	"editStatusDialog.toggleStatusMessage": {
		"string": "Send message to requester",
		"developer_comment": "Checkbox option to send a message to the user who requested the item"
	},
	"errorBoundary.message": {
		"string": "Hello, I'm having trouble with Check. The web interface has just crashed and is blocking me from doing work!",
		"developer_comment": "Prefilled support request message when Check UI crashes"
	},
	"feed.feed": {
		"string": "Feed",
		"developer_comment": "Tab with label 'Feed' displayed on a feed page. It references content from different workspaces that is shared among them."
	},
	"feed.shared": {
		"string": "Shared",
		"developer_comment": "Tab with label 'Shared' displayed on a feed page. It references content from this workspace that is shared with others."
	},
	"feedItem.aboutThisClaim": {
		"string": "About this claim"
	},
	"feedItem.claimDescription": {
		"string": "Claims"
	},
	"feedItem.completedAnnotations": {
		"string": "Completed annotations"
	},
	"feedItem.couldNotImport": {
		"string": "We could not import the claim because the media associated with this claim already exist in this workspace"
	},
	"feedItem.factCheck": {
		"string": "Fact-check",
		"developer_comment": "Middle column title on feed item page"
	},
	"feedItem.factCheckSummary": {
		"string": "Summary",
		"developer_comment": "Fact-check summary"
	},
	"feedItem.factCheckTitle": {
		"string": "Title",
		"developer_comment": "Fact-check title"
	},
	"feedItem.factCheckUrl": {
		"string": "Published article URL",
		"developer_comment": "Fact-check article URL"
	},
	"feedItem.import": {
		"string": "Import"
	},
	"feedItem.importDescription": {
		"string": "A new claim will be created in your workspace with media.",
		"developer_comment": "Dialog description when importing a claim from feed page."
	},
	"feedItem.importSelectLabel": {
		"string": "Import to workspace",
		"developer_comment": "Select field label used in import claim dialog from feed page."
	},
	"feedItem.importTextLabel": {
		"string": "Claim description",
		"developer_comment": "Text field label used in import claim dialog from feed page."
	},
	"feedItem.importTitle": {
		"string": "Import data to workspace",
		"developer_comment": "Dialog title when importing a claim from feed page."
	},
	"feedItem.importedSuccessfully": {
		"string": "Claim successfully imported to {workspaceName} workspace"
	},
	"feedItem.importingQuestion": {
		"string": "What content do you want to import?",
		"developer_comment": "Question in feed page importing modal"
	},
	"feedItem.lastSubmitted": {
		"string": "Last submitted",
		"developer_comment": "A label indicating that the following date is when an item was last submitted to the tip line"
	},
	"feedItem.mediaRequests": {
		"string": "{number} tipline requests across all medias"
	},
	"feedItem.mediasColumnTitleAll": {
		"string": "{number} Medias across all organizations"
	},
	"feedItem.mediasColumnTitleSingle": {
		"string": "{number} Medias from {organizationName}"
	},
	"feedItem.noClaim": {
		"string": "No claim added yet"
	},
	"feedItem.noImportingClaim": {
		"string": "Select an organization to display available fact-check and annotations.",
		"developer_comment": "Message displayed on feed item page when no claim was selected."
	},
	"feedItem.noTags": {
		"string": "No tags.",
		"developer_comment": "Displayed on feed item page when item has no tags."
	},
	"feedItem.noTasks": {
		"string": "No completed annotations.",
		"developer_comment": "Displayed on feed item page when item has no completed annotations."
	},
	"feedItem.notPublished": {
		"string": "Not published yet"
	},
	"feedItem.proceedImport": {
		"string": "Import",
		"developer_comment": "Button label to confirm importing claim from feed page"
	},
	"feedItem.publishedAt": {
		"string": "Report published: {date}"
	},
	"feedItem.rating": {
		"string": "Rating: {rating}"
	},
	"feedItem.request": {
		"string": "Request",
		"developer_comment": "A label that appears alongside a number showing the number of requests an item has received. This is the singular noun for use when it is a single request, appearing in English as '1 request'."
	},
	"feedItem.requests": {
		"string": "Requests",
		"developer_comment": "A label that appears alongside a number showing the number of requests an item has received. This is the plural noun for use when there are zero or more than one requests, appearing in English as '10 requests' or '0 requests'."
	},
	"feedItem.sortBy": {
		"string": "Sort by"
	},
	"feedItem.tags": {
		"string": "Tags"
	},
	"feedSharingSwitch.cancel": {
		"string": "Cancel",
		"developer_comment": "Button label displayed on 'Enable feed sharing' confirmation window."
	},
	"feedSharingSwitch.confirmDisableSharingContent": {
		"string": "Are you sure? {numberOfWorkspaces} other workspaces will immediately loose access to this content.",
		"developer_comment": "Content of 'Disable feed sharing' confirmation window."
	},
	"feedSharingSwitch.confirmDisableSharingTitle": {
		"string": "Disable Shared Feed",
		"developer_comment": "Title of 'Disable feed sharing' confirmation window."
	},
	"feedSharingSwitch.confirmEnableSharingContent": {
		"string": "Are you sure? Any current and future content matching this filter will immediately be shared with {numberOfWorkspaces} other workspaces.",
		"developer_comment": "Content of 'Enable feed sharing' confirmation window."
	},
	"feedSharingSwitch.confirmEnableSharingTitle": {
		"string": "Enable Shared Feed",
		"developer_comment": "Title of 'Enable feed sharing' confirmation window."
	},
	"feedSharingSwitch.defaultErrorMessage": {
		"string": "Could not update your sharing settings for this feed, please try again",
		"developer_comment": "Error message displayed when it's not possible to change sharing setting for a feed."
	},
	"feedSharingSwitch.description": {
		"string": "Select the content to share in this feed using the filter.",
		"developer_comment": "Description for a toggle/switcher displayed on feed page, under the Shared tab."
	},
	"feedSharingSwitch.disableSharing": {
		"string": "Disable sharing",
		"developer_comment": "Button label displayed on 'Disable feed sharing' confirmation window."
	},
	"feedSharingSwitch.enableSharing": {
		"string": "Enable sharing",
		"developer_comment": "Button label displayed on 'Enable feed sharing' confirmation window."
	},
	"feedSharingSwitch.label": {
		"string": "Enable sharing",
		"developer_comment": "Label for a toggle/switcher displayed on feed page, under the Shared tab."
	},
	"feedSharingSwitch.savedSuccessfully": {
		"string": "Content shared to {feedName}",
		"developer_comment": "Success message displayed when data sharing is changed for a feed."
	},
	"feedSharingSwitch.tooltip": {
		"string": "Apply and save the filter to share",
		"developer_comment": "Tooltip displayed on feed 'Enable sharing' switcher"
	},
	"fetchBot.contactUs": {
		"string": "Contact us to set up"
	},
	"fileUploadRespondTask.answerTask": {
		"string": "Answer task"
	},
	"fileUploadRespondTask.cancelTask": {
		"string": "Cancel"
	},
	"filter.tag.deleted": {
		"string": "Property deleted",
		"developer_comment": "Message shown a placeholder when someone tries to filter a search by a property that the user has deleted"
	},
	"footer.madeBy": {
		"string": "Check: Verify breaking news online. Made with ✨ by {meedan}"
	},
	"geoLocationRespondTask.error": {
		"string": "Sorry, an error occurred while updating the task. Please try again and contact {supportEmail} if the condition persists."
	},
	"geoLocationRespondTask.invalidCoords": {
		"string": "Invalid coordinates"
	},
	"geoLocationRespondTask.notFound": {
		"string": "Sorry, this place was not found. Please try another search."
	},
	"geoLocationRespondTask.searching": {
		"string": "Searching…"
	},
	"geolocationRespondTask.answerTask": {
		"string": "Answer task"
	},
	"geolocationRespondTask.cancelTask": {
		"string": "Cancel"
	},
	"geolocationRespondTask.coordinates": {
		"string": "Latitude, Longitude"
	},
	"geolocationRespondTask.placeName": {
		"string": "Customize place name"
	},
	"geolocationRespondTask.searchMap": {
		"string": "Search the map"
	},
	"global.appNameHuman": {
		"string": "Check"
	},
	"global.bestViewed": {
		"string": "Best viewed with <a href=\"https://www.google.com/chrome/browser/desktop/\">Chrome for Desktop</a>."
	},
	"global.cancel": {
		"string": "Cancel",
		"developer_comment": "Regular Cancel action label"
	},
	"global.close": {
		"string": "Close"
	},
	"global.confirm": {
		"string": "Confirm"
	},
	"global.delete": {
		"string": "Delete"
	},
	"global.edit": {
		"string": "Edit"
	},
	"global.ok": {
		"string": "OK",
		"developer_comment": "Regular OK/confirmation label"
	},
	"global.save": {
		"string": "Save"
	},
	"global.submit": {
		"string": "Submit"
	},
	"global.submitting": {
		"string": "Submitting…"
	},
	"global.tags": {
		"string": "Tags"
	},
	"global.unknownError": {
		"string": "Sorry, an error occurred. Please try again and contact {supportEmail} if the condition persists.",
		"developer_comment": "Message displayed in error notification when an operation fails unexpectedly"
	},
	"global.update": {
		"string": "Update"
	},
	"headerActions.signIn": {
		"string": "Sign In"
	},
	"home.invalidExpiredInvitation": {
		"string": "Sorry, the invitation you received was expired. Please contact {supportEmail} if you think this is an error.",
		"developer_comment": "Error message displayed when an invitation to join the app doesn't work."
	},
	"home.invalidInvitation": {
		"string": "Sorry, an error occurred while processing your invitation. Please contact {supportEmail}.",
		"developer_comment": "Error message displayed when an invitation to join the app doesn't work."
	},
	"home.invalidNoInvitation": {
		"string": "Sorry, the invitation you received was not found. Please contact {supportEmail} if you think this is an error.",
		"developer_comment": "Error message displayed when an invitation to join the app doesn't work."
	},
	"home.invalidTeamInvitation": {
		"string": "Sorry, the workspace to which you were invited was not found. Please contact {supportEmail} if you think this is an error.",
		"developer_comment": "Error message displayed when an invitation to join the app doesn't work."
	},
	"home.somethingWrong": {
		"string": "Sorry, an error occurred. Please refresh your browser and contact {supportEmail} if the condition persists.",
		"developer_comment": "Generic error displayed when some error happens."
	},
	"home.successInvitation": {
		"string": "Welcome to Check. Please login with the password that you received in the welcome email.",
		"developer_comment": "Message that appears after accepting an invitation to join the app."
	},
	"inviteDialog.invitationSent": {
		"string": "Invites sent!",
		"developer_comment": "Success notification confirming that invitations were sent to users"
	},
	"inviteDialog.sentOtherInvitation": {
		"string": "The other invites were sent successfully",
		"developer_comment": "Message displayed when user sends multiple invitations but some emails fail and others succeed"
	},
	"inviteDialog.submit": {
		"string": "Invite",
		"developer_comment": "Button to submit invitations."
	},
	"inviteDialog.textInputLabel": {
		"string": "Email addresses, comma separated",
		"developer_comment": "Label to input for invited emails. Requires that multiple emails be entered separated by comma."
	},
	"inviteDialog.title": {
		"string": "Invite workspace members",
		"developer_comment": "Dialog title for inviting members to workspace"
	},
	"inviteNewAccount.createAccount": {
		"string": "Create Account",
		"developer_comment": "Submit button for create a new account"
	},
	"inviteNewAccount.createMessage": {
		"string": "You need to create an account for <b>{email}</b>",
		"developer_comment": "Inform your to create a new account for signup"
	},
	"inviteNewAccount.invitedBy": {
		"string": "{name} has invited you to join the workspace"
	},
	"inviteNewAccountemailLabel": {
		"string": "Email",
		"developer_comment": "Label for user email field"
	},
	"inviteNewAccountnameLabel": {
		"string": "പേര്",
		"developer_comment": "Label for user name field"
	},
	"inviteNewAccountpasswordConfirmLabel": {
		"string": "Password confirmation",
		"developer_comment": "Label for password confirmation field"
	},
	"inviteNewAccountpasswordLabel": {
		"string": "Password (minimum 8 characters)",
		"developer_comment": "Label for password field"
	},
	"inviteNewAccounttosMissing": {
		"string": "You must agree to the Terms of Service and Privacy Policy",
		"developer_comment": "Error message for check Terms and Privacy Privacy boxes"
	},
	"languageListItem.default": {
		"string": "{language} (default)"
	},
	"languageListItem.deleteConfirmationText": {
		"string": "Delete {language} and all content"
	},
	"languagePickerDialog.optionLabel": {
		"string": "{languageName} ({languageCode})"
	},
	"languagePickerDialog.selectLanguage": {
		"string": "Select a language"
	},
	"languagePickerDialog.title": {
		"string": "Choose a language"
	},
	"languagePickerDialog.unknownLanguage": {
		"string": "Unknown language"
	},
	"languageSwitcher.makeDefault": {
		"string": "Set as default language for this item"
	},
	"languageSwitcher.primaryLanguage": {
		"string": "(default)"
	},
	"languagesComponent.blurb": {
		"string": "Add new languages to your workspace in order to create reports, tipline bots and statuses in multiple languages when communicating with users."
	},
	"languagesComponent.title": {
		"string": "Languages"
	},
	"limitedTextFieldWithCounter.counter": {
		"string": "{remaining, plural, one {(# character left)} other {(# characters left)}}",
		"developer_comment": "Label that displays how many characters more can be typed"
	},
	"list.Demand": {
		"string": "Requests"
	},
	"list.FirstSeen": {
		"string": "Submitted"
	},
	"list.Item": {
		"string": "അവകാശവാദം"
	},
	"list.LinkedItems": {
		"string": "Similar media"
	},
	"list.ShareCount": {
		"string": "FB Shares"
	},
	"list.Status": {
		"string": "Status"
	},
	"list.Type": {
		"string": "Type"
	},
	"list.clusterFactCheckedByTeamNames": {
		"string": "Report published",
		"developer_comment": "Table header for column that shows from which workspaces the items in the same cluster have a published report"
	},
	"list.clusterFirstItemAt": {
		"string": "Submitted",
		"developer_comment": "Table header for column that shows when the last item of the cluster was created"
	},
	"list.clusterLastItemAt": {
		"string": "Last submitted",
		"developer_comment": "Table header for column that shows when the last item of the cluster was created"
	},
	"list.clusterRequests": {
		"string": "Requests",
		"developer_comment": "Table header for column that shows number of requests in a cluster"
	},
	"list.clusterSize": {
		"string": "Similar media",
		"developer_comment": "Table header for column that shows the number of similar items that belong to the same cluster"
	},
	"list.commentCount": {
		"string": "FB Comments"
	},
	"list.createdBy": {
		"string": "Created by",
		"developer_comment": "Table header for column that shows the creator name"
	},
	"list.factCheck": {
		"string": "Fact-check"
	},
	"list.folder": {
		"string": "Folder",
		"developer_comment": "Table header for column that shows the folder title an item is in"
	},
	"list.mediaPublishedAt": {
		"string": "Media published"
	},
	"list.reactCount": {
		"string": "FB Reactions"
	},
	"list.reportPublishedBy": {
		"string": "Report published by"
	},
	"list.reportStatus": {
		"string": "Report status"
	},
	"list.sourceName": {
		"string": "ഉറവിടം",
		"developer_comment": "Table header for column that shows item source"
	},
	"list.suggestionsCount": {
		"string": "Suggested matches"
	},
	"list.tags": {
		"string": "Tags"
	},
	"list.teamName": {
		"string": "Fact-check by",
		"developer_comment": "Table header for column that shows the team name"
	},
	"list.updated": {
		"string": "Updated"
	},
	"login.alreadyHasAccount": {
		"string": "Already have an account ?"
	},
	"login.contactSupport": {
		"string": "For support contact <a href=\"mailto:{supportEmail}\">{supportEmail}</a>."
	},
	"login.emailLabel": {
		"string": "Email"
	},
	"login.emailLogin": {
		"string": "Or, sign in with your email"
	},
	"login.nameLabel": {
		"string": "പേര്"
	},
	"login.newAccount": {
		"string": "Don't have an account ?"
	},
	"login.otpAttemptLabel": {
		"string": "Two-Factor Authentication Token"
	},
	"login.passwordConfirmLabel": {
		"string": "Password confirmation"
	},
	"login.passwordInputHint": {
		"string": "Password"
	},
	"login.passwordLabel": {
		"string": "Password (minimum 8 characters)"
	},
	"login.registerTitle": {
		"string": "Register"
	},
	"login.signIn": {
		"string": "Sign in",
		"developer_comment": "Sign in button label"
	},
	"login.signInLink": {
		"string": "Sign in",
		"developer_comment": "Button label. Switches from 'create new account' to 'logging in' mode"
	},
	"login.signUp": {
		"string": "Sign up",
		"developer_comment": "Sign up button label"
	},
	"login.signUpLink": {
		"string": "Sign up",
		"developer_comment": "Button label. Switches from 'logging in' to 'create new account' mode"
	},
	"login.title": {
		"string": "Sign in"
	},
	"login.tosMissing": {
		"string": "You must agree to the Terms of Service and Privacy Policy"
	},
	"login.withGoogle": {
		"string": "Sign in with Google"
	},
	"loginEmail.lostPassword": {
		"string": "Forgot your password?"
	},
	"mainErrorBoundary.cardTitle": {
		"string": "An unexpected error happened",
		"developer_comment": "Title for error state card displayed in error page"
	},
	"media.normalSpeed": {
		"string": "Normal speed",
		"developer_comment": "Sets video playback rate to original 1x speed"
	},
	"media.typeAudio": {
		"string": "Audio"
	},
	"media.typeBlank": {
		"string": "Imported report"
	},
	"media.typeClaim": {
		"string": "Text"
	},
	"media.typeImage": {
		"string": "ചിത്രം"
	},
	"media.typeLink": {
		"string": "ലിങ്ക് "
	},
	"media.typeVideo": {
		"string": "Video"
	},
	"mediaActions.assignOrUnassign": {
		"string": "Assign to…"
	},
	"mediaActions.history": {
		"string": "Item history"
	},
	"mediaActions.lockStatus": {
		"string": "Lock status"
	},
	"mediaActions.refresh": {
		"string": "Refresh"
	},
	"mediaActions.sendToSpam": {
		"string": "Mark as Spam"
	},
	"mediaActions.sendToTrash": {
		"string": "Send to Trash"
	},
	"mediaActions.tooltip": {
		"string": "Item actions"
	},
	"mediaActions.unlockStatus": {
		"string": "Unlock status"
	},
	"mediaActionsBar.assignmentNotes": {
		"string": "Notes"
	},
	"mediaActionsBar.assignmentNotesTitle": {
		"string": "Add a note to the email"
	},
	"mediaActionsBar.assignmentTitle": {
		"string": "Assign item to collaborators"
	},
	"mediaActionsBar.assignmentsUpdated": {
		"string": "Assignments updated successfully"
	},
	"mediaActionsBar.confirmTo": {
		"string": "Confirm"
	},
	"mediaActionsBar.dialogMoveTitle": {
		"string": "Move to a different folder"
	},
	"mediaActionsBar.dialogRestoreOrConfirmToListTitle": {
		"string": "Move item to folder…"
	},
	"mediaActionsBar.move": {
		"string": "Move"
	},
	"mediaActionsBar.moveTo": {
		"string": "Move to…"
	},
	"mediaActionsBar.movedConfirmBack": {
		"string": "Confirmed, redirecting…"
	},
	"mediaActionsBar.movedRestoreBack": {
		"string": "Restored from Trash, redirecting…"
	},
	"mediaActionsBar.movedToSpam": {
		"string": "The item was moved to {spam}"
	},
	"mediaActionsBar.movedToTrash": {
		"string": "The item was moved to {trash}"
	},
	"mediaActionsBar.notSpamTo": {
		"string": "Not spam"
	},
	"mediaActionsBar.publishedReport": {
		"string": "Published report",
		"developer_comment": "A label on a button that opens the report for this item. This displays if the report for this media item is currently in the 'Published' state."
	},
	"mediaActionsBar.restoreOrConfirm": {
		"string": "Move to folder"
	},
	"mediaActionsBar.restoreTo": {
		"string": "Restore from Trash"
	},
	"mediaActionsBar.unpublishedReport": {
		"string": "Unpublished report",
		"developer_comment": "A label on a button that opens the report for this item. This displays if the report for this media item is NOT currently in the 'Published' state."
	},
	"mediaAnalysis.analysis": {
		"string": "Analysis",
		"developer_comment": "Title of the media analysis bar"
	},
	"mediaAnalysis.content": {
		"string": "Content",
		"developer_comment": "Label for the analysis content field"
	},
	"mediaAnalysis.discontinued": {
		"string": "(Discontinued - {learnMoreLink})",
		"developer_comment": "Caption that informs that the analysis feature is deprecated."
	},
	"mediaAnalysis.import": {
		"string": "Import",
		"developer_comment": "Creator that refers to items created via Fetch or Zapier."
	},
	"mediaAnalysis.learnMore": {
		"string": "Learn more",
		"developer_comment": "Text that links to an external help article"
	},
	"mediaAnalysis.sharedDatabase": {
		"string": "Shared Database",
		"developer_comment": "Creator that refers to items created from the shared database."
	},
	"mediaAnalysis.tipline": {
		"string": "Tipline",
		"developer_comment": "Creator that refers to items created via tiplines."
	},
	"mediaAnalysis.title": {
		"string": "Title",
		"developer_comment": "Label for the analysis title field"
	},
	"mediaAnalysis.webForm": {
		"string": "Web Form",
		"developer_comment": "Creator that refers to items created via web forms."
	},
	"mediaAnalysisField.copied": {
		"string": "Copied!",
		"developer_comment": "Confirmation label that is displayed once a Copy link is clicked."
	},
	"mediaAnalysisField.copy": {
		"string": "Copy text",
		"developer_comment": "Link text that once clicked copies text to clipboard."
	},
	"mediaClaim.claim": {
		"string": "അവകാശവാദം",
		"developer_comment": "Title of the media claim section."
	},
	"mediaClaim.error": {
		"string": "error",
		"developer_comment": "Caption that informs that a claim could not be saved"
	},
	"mediaClaim.placeholder": {
		"string": "For example: The earth is flat",
		"developer_comment": "Placeholder for claim description field."
	},
	"mediaClaim.saved": {
		"string": "saved by {userName} {timeAgo}",
		"developer_comment": "Caption that informs who last saved this claim and when it happened."
	},
	"mediaClaim.saving": {
		"string": "saving…",
		"developer_comment": "Caption that informs that a claim is being saved"
	},
	"mediaComments.noNote": {
		"string": "No note"
	},
	"mediaComponent.annotation": {
		"string": "Annotation",
		"developer_comment": "Label for the Annotation tab"
	},
	"mediaComponent.answered": {
		"string": "completed"
	},
	"mediaComponent.notes": {
		"string": "Notes",
		"developer_comment": "Label for the Notes tab, as in text notes"
	},
	"mediaComponent.requests": {
		"string": "Requests",
		"developer_comment": "Label for the Requests tab, as in requests from users"
	},
	"mediaComponent.source": {
		"string": "ഉറവിടം",
		"developer_comment": "Label for the Source tab, as in source of the information"
	},
	"mediaComponent.timelineTab": {
		"string": "Timeline"
	},
	"mediaComponent.verificationTasks": {
		"string": "Item tasks"
	},
	"mediaContext.placeholder": {
		"string": "Type something",
		"developer_comment": "Placeholder for claim context field."
	},
	"mediaContext.title": {
		"string": "Additional context",
		"developer_comment": "Title of claim context field."
	},
	"mediaCreatedBy.createdBy": {
		"string": "Item created by {name}",
		"developer_comment": "A text field that indicates who the original author of a claim is. The {name} field will render the display name of the user who created the item."
	},
	"mediaDetail.spam": {
		"string": "Spam"
	},
	"mediaDetail.trash": {
		"string": "Trash"
	},
	"mediaExpanded.extractedText": {
		"string": "Text extracted from image:",
		"developer_comment": "Label for text extracted from the image below"
	},
	"mediaExpanded.firstSeen": {
		"string": "First submitted:",
		"developer_comment": "Header for the date when the Check item (aka media) was first received (added to) by the workspace"
	},
	"mediaExpanded.lastSeen": {
		"string": "Last submitted:",
		"developer_comment": "Header for the date when the Check item (aka media) was last received by the the workspace"
	},
	"mediaExpanded.noExtractedText": {
		"string": "No text extracted from this image",
		"developer_comment": "Label when text extracted from an image is not available"
	},
	"mediaExpanded.noTranscription": {
		"string": "No audio transcribed from this media",
		"developer_comment": "Label when transcription is not (yet) available"
	},
	"mediaExpanded.requests": {
		"string": "{count, plural, one {# request} other {# requests}}"
	},
	"mediaExpanded.transcriptionCompleted": {
		"string": "Audio transcribed from media:",
		"developer_comment": "Label for transcription from audio or video"
	},
	"mediaExpanded.transcriptionInProgress": {
		"string": "Audio transcription in progress…",
		"developer_comment": "Label when transcription is in progress"
	},
	"mediaExpandedArchives.archives": {
		"string": "Archives:",
		"developer_comment": "This is a header that tells the user that what follows is a list of archival services on the internet that they can use to permanently save the content at a URL."
	},
	"mediaExpandedMetadata.comments": {
		"string": "FB Comments"
	},
	"mediaExpandedMetadata.publishedOn": {
		"string": "Published on"
	},
	"mediaExpandedMetadata.reactions": {
		"string": "FB Reactions"
	},
	"mediaExpandedMetadata.shares": {
		"string": "FB Shares"
	},
	"mediaFactCheck,error": {
		"string": "error",
		"developer_comment": "Caption that informs that a fact-check could not be saved"
	},
	"mediaFactCheck,saved": {
		"string": "saved by {userName} {timeAgo}",
		"developer_comment": "Caption that informs who last saved this fact-check and when it happened."
	},
	"mediaFactCheck.claimMissingDesc": {
		"string": "You must add a claim to access the fact-check report.",
		"developer_comment": "Content of a dialog that is displayed when user attempts to access a report from a fact-check but there is no claim yet"
	},
	"mediaFactCheck.claimMissingTitle": {
		"string": "Claim missing",
		"developer_comment": "Title of a dialog that is displayed when user attempts to access a report from a fact-check but there is no claim yet"
	},
	"mediaFactCheck.confirmButtonLabel": {
		"string": "Go back to editing",
		"developer_comment": "A label on a button that the user can press to go back to the screen where they edit a fact check."
	},
	"mediaFactCheck.factCheck": {
		"string": "Fact-check",
		"developer_comment": "Title of the media fact-check section."
	},
	"mediaFactCheck.saving": {
		"string": "saving…",
		"developer_comment": "Caption that informs that a fact-check is being saved"
	},
	"mediaFactCheck.summary": {
		"string": "Summary",
		"developer_comment": "Label for fact-check summary field"
	},
	"mediaFactCheck.title": {
		"string": "Title",
		"developer_comment": "Label for fact-check title field"
	},
	"mediaFactCheck.url": {
		"string": "Article URL",
		"developer_comment": "Label for fact-check URL field"
	},
	"mediaFactCheckField.noClaimDescription": {
		"string": "Add a claim to access the fact-check",
		"developer_comment": "Placeholder for fact-check field when there is no claim description filled."
	},
	"mediaItem.addedBy": {
		"string": "Added by {name}"
	},
	"mediaItem.confirmedBy": {
		"string": "Confirmed by {name}"
	},
	"mediaItem.detach": {
		"string": "Detach"
	},
	"mediaItem.detachedSuccessfully": {
		"string": "Item detached to '{toProject}'",
		"developer_comment": "Banner displayed after items are detached successfully"
	},
	"mediaItem.doneRedirecting": {
		"string": "Done, redirecting to new main item…"
	},
	"mediaItem.error": {
		"string": "Error, please try again"
	},
	"mediaItem.lastSubmitted": {
		"string": "Last submitted {timeAgo}",
		"developer_comment": "Here timeAgo is a relative time, for example, '10 minutes ago' or 'yesterday'"
	},
	"mediaItem.pinAsMain": {
		"string": "Pin as main"
	},
	"mediaItem.pinning": {
		"string": "Pinning…"
	},
	"mediaItem.reportPaused": {
		"string": "Paused"
	},
	"mediaItem.reportPublished": {
		"string": "Published"
	},
	"mediaItem.reportUnpublished": {
		"string": "Unpublished"
	},
	"mediaItem.requests": {
		"string": "{count, plural, one {# request} other {# requests}}"
	},
	"mediaItem.similarMedia": {
		"string": "{count, plural, one {# similar media} other {# similar media}}"
	},
	"mediaLanguageChip.error": {
		"string": "Sorry, an error occurred while updating the language. Please try again and contact {supportEmail} if the condition persists.",
		"developer_comment": "This message appears when a user tries to update the language on a media item and an error occurs."
	},
	"mediaMetadata.ImageSearch": {
		"string": "Reverse image search",
		"developer_comment": "Menu option for performing reverse image searches on google or other engines"
	},
	"mediaMetadata.audioActions": {
		"string": "Audio actions",
		"developer_comment": "Actions menu for item of type Audio"
	},
	"mediaMetadata.download": {
		"string": "Download",
		"developer_comment": "Menu option for downloading the original file of current item"
	},
	"mediaMetadata.imageActions": {
		"string": "Image actions",
		"developer_comment": "Actions menu for item of type Image"
	},
	"mediaMetadata.playbackSpeed": {
		"string": "Playback speed",
		"developer_comment": "Menu option for altering playback speed of video/audio clip"
	},
	"mediaMetadata.videoActions": {
		"string": "Video actions",
		"developer_comment": "Actions menu for item of type Video"
	},
	"mediaRelatedComponent.addSimilar": {
		"string": "Add relation"
	},
	"mediaRelatedComponent.count": {
		"string": "{count, plural, one {# related item} other {# related items}}"
	},
	"mediaRelatedComponent.defaultErrorMessage": {
		"string": "Could not add related item"
	},
	"mediaRelatedComponent.dialogTitle": {
		"string": "Add relation"
	},
	"mediaRelatedComponent.savedSuccessfully": {
		"string": "Related item added successfully"
	},
	"mediaRelatedComponent.submitButton": {
		"string": "{count, plural, one {Add relation for one item} other {Add relation for # items}}"
	},
	"mediaRequests.allRequests": {
		"string": "{count, plural, one {# request across all media} other {# requests across all media}}"
	},
	"mediaRequests.noRequest": {
		"string": "No requests"
	},
	"mediaRequests.thisRequests": {
		"string": "{count, plural, one {# request} other {# requests}}"
	},
	"mediaSearch.error": {
		"string": "Sorry, the following error occurred: {message}. Please refresh the item to try again and contact {supportEmail} if the condition persists."
	},
	"mediaSearch.itemWentAway": {
		"string": "Not found"
	},
	"mediaSearch.nextItem": {
		"string": "Next item"
	},
	"mediaSearch.previousItem": {
		"string": "Previous item"
	},
	"mediaSearch.xOfY": {
		"string": "{current} of {total}"
	},
	"mediaSimilarities.moreMedias": {
		"string": "More medias",
		"developer_comment": "Heading for a list of similar medias"
	},
	"mediaSimilarityBarAdd.addAsSimilar": {
		"string": "Export all media"
	},
	"mediaSimilarityBarAdd.addSimilar": {
		"string": "Add similar"
	},
	"mediaSimilarityBarAdd.addSimilarItem": {
		"string": "{count, plural, one {Import all media from one item} other {Import all media from # items}}"
	},
	"mediaSimilarityBarAdd.addSimilarToThis": {
		"string": "Import similar media into this item"
	},
	"mediaSimilarityBarAdd.addSimilarToThisTitle": {
		"string": "Import similar media from other items"
	},
	"mediaSimilarityBarAdd.addThisToSimilar": {
		"string": "Export all media to another item"
	},
	"mediaSimilarityBarAdd.addThisToSimilarTitle": {
		"string": "Export all media to another item"
	},
	"mediaSimilarityBarAdd.addToImportedReport": {
		"string": "Add to imported report"
	},
	"mediaSimilarityBarAdd.defaultErrorMessage": {
		"string": "Could not add similar item",
		"developer_comment": "Warning displayed if an error occurred when adding a similar item"
	},
	"mediaSimilarityBarAdd.exportTooltip": {
		"string": "Media from this item cannot be exported if this item is attached to a main item or if its report is published"
	},
	"mediaSimilarityBarAdd.savedSuccessfully": {
		"string": "Similar item added successfully",
		"developer_comment": "Banner displayed when similar item is added successfully"
	},
	"mediaSimilarityBarComponent.hasMain": {
		"string": "This media has been associated with an existing claim."
	},
	"mediaSimilarityBarComponent.hasSuggestedMain": {
		"string": "This media has been suggested as similar to an existing claim.",
		"developer_comment": "Caption to inform user that there is a suggested similarity"
	},
	"mediaSimilarityBarComponent.openClaim": {
		"string": "Open claim"
	},
	"mediaSimilarityBarComponent.reviewSuggestion": {
		"string": "Review suggestion",
		"developer_comment": "Button label for reviewing similarity suggestions"
	},
	"mediaSimilarityBarComponent.similarMedia": {
		"string": "Similar media",
		"developer_comment": "Plural. Heading for the number of similar media"
	},
	"mediaSimilarityBarComponent.suggestedMatches": {
		"string": "Suggested media",
		"developer_comment": "Plural. Heading for the number of suggested media"
	},
	"mediaSource.changeSource": {
		"string": "Change",
		"developer_comment": "allow user to change a project media source"
	},
	"mediaStatus.error": {
		"string": "Sorry, an error occurred while updating the status. Please try again and contact {supportEmail} if the condition persists."
	},
	"mediaSuggestionsComponent.back": {
		"string": "Back"
	},
	"mediaSuggestionsComponent.dialogRejectTitle": {
		"string": "Choose a destination folder for this item"
	},
	"mediaSuggestionsComponent.goBack": {
		"string": "Back to main view"
	},
	"mediaSuggestionsComponent.mediasCount": {
		"string": "{number, plural, one {# media} other {# medias}}"
	},
	"mediaSuggestionsComponent.moveItem": {
		"string": "Move item"
	},
	"mediaSuggestionsComponent.movedToSpam": {
		"string": "The item was moved to {spam}"
	},
	"mediaSuggestionsComponent.movedToTrash": {
		"string": "The item was moved to {trash}"
	},
	"mediaSuggestionsComponent.noSuggestions": {
		"string": "There is no suggested media."
	},
	"mediaSuggestionsComponent.question": {
		"string": "Is this media a good match for the claim and medias on the left?",
		"developer_comment": "Subtitle for similarity matching widget"
	},
	"mediaSuggestionsComponent.requestsCount": {
		"string": "{number} tipline requests across all medias"
	},
	"mediaSuggestionsComponent.sendItemsToSpam": {
		"string": "Mark as spam"
	},
	"mediaSuggestionsComponent.sendItemsToTrash": {
		"string": "Send to trash"
	},
	"mediaSuggestionsComponent.title": {
		"string": "{total, plural, one {{current} of # suggested media} other {{current} of # suggested medias}}"
	},
	"metadata.cancel": {
		"string": "Cancel",
		"developer_comment": "This is a label that appears on a button next to an item that the user is editing. The label indicates that if the user presses this button, the user will 'cancel' the editing action and all changes will revert."
	},
	"metadata.couldNotSave": {
		"string": "Could not save, missing required field",
		"developer_comment": "Error message displayed when it's not possible to save metadata due to a required field not being filled in."
	},
	"metadata.couldNotSaveUrl": {
		"string": "Could not save, at least one URL is invalid",
		"developer_comment": "Error message displayed when a URL is not in the correct format in the form, which prevents the form from being saved."
	},
	"metadata.delete": {
		"string": "Delete",
		"developer_comment": "This is a label that appears on a button next to an item that the user can delete. The label indicates that if the user presses this button, the item will be deleted."
	},
	"metadata.edit": {
		"string": "Edit",
		"developer_comment": "This is a label that appears on a button next to an item that the user can edit. The label indicates that if the user presses this button, the item will become editable."
	},
	"metadata.file.dropFile": {
		"string": "Drag and drop a file here, or click to upload a file (max size: {fileSizeLabel}, allowed extensions: {extensions})",
		"developer_comment": "This message appears in a rectangle, instructing the user that they can use their mouse to drag and drop a file, or click to pull up a file selector menu. This also tells them the maximum allowed file size, and the valid types of files that the user can upload. The `fileSizeLabel` variable will read something like '1.0 MB', and the 'extensions' variable is a list of valid file extensions. Neither will be localized."
	},
	"metadata.file.invalidFile": {
		"string": "This is not a valid file. Please try again with a different file.",
		"developer_comment": "This message appears when a user tries to add two or more files at once to the file upload widget."
	},
	"metadata.file.tooBig": {
		"string": "This file is too big. The maximum allowed file size is {fileSizeLabel}. Please try again with a different file.",
		"developer_comment": "This message appears when a user tries to upload a file that is too big. The 'fileSizeLabel' will read something like '1.0 MB' and will not be localized."
	},
	"metadata.file.tooManyFiles": {
		"string": "You can only upload one file here. Please try uploading one file.",
		"developer_comment": "This message appears when a user tries to add two or more files at once to the file upload widget."
	},
	"metadata.file.wrongType": {
		"string": "This is not an accepted file type. Accepted file types include: {extensions}. Please try again with a different file.",
		"developer_comment": "This message appears when a user tries to upload a file that is the wrong file type. The 'extensions' variable will be a list of file extensions (PDF, PNG, etc) and will not be localized."
	},
	"metadata.form.cancel": {
		"string": "Cancel changes",
		"developer_comment": "This is a label on a button that the user presses in order to revert/cancel any changes made to an unsaved form."
	},
	"metadata.form.edit": {
		"string": "Edit",
		"developer_comment": "This is a label on a button that the user presses in order to edit the items in the attached form."
	},
	"metadata.form.save": {
		"string": "Save",
		"developer_comment": "This is a label on a button at the top of a form. The label indicates that if the user presses this button, the user will save the changes they have been making in the form."
	},
	"metadata.location.coordinates": {
		"string": "Latitude, longitude",
		"developer_comment": "This is a label that appears on a text field, related to a pin on a map. This contains the latitude and longitude coordinates of the map pin. If the user changes these numbers, the map pin moves. If the user moves the map pin, the numbers update to reflect the new pin location."
	},
	"metadata.location.coordinates.helper": {
		"string": "Should be a comma-separated pair of latitude and longitude coordinates like \"-12.9, -38.15\". Drag the map pin if you are having difficulty.",
		"developer_comment": "This is a helper message that appears when someone enters text in the 'Latitude, longitude' text field that cannot be parsed as a valid pair of latitude and longitude coordinates. It tells the user that they need to provide valid coordinates and gives an example. It also tells them that they can do a drag action with the mouse on the visual map pin as an alternative to entering numbers in this field."
	},
	"metadata.location.customize": {
		"string": "Customize place name",
		"developer_comment": "This is a label that appears on a text field, related to a pin on a map. The user may type any text of their choice here and name the place they are pinning. They can also modify suggested place names here."
	},
	"metadata.location.search": {
		"string": "Search the map",
		"developer_comment": "This is a label that appears on a text field. If the user begins to type a location they will receive a list of suggested place names."
	},
	"metadata.save": {
		"string": "Save",
		"developer_comment": "This is a label that appears on a button next to an item that the user is editing. The label indicates that if the user presses this button, the user will save the changes they have been making."
	},
	"metadata.uploadProgressLabel": {
		"string": "Saving {file}…",
		"developer_comment": "This is a label that appears while a file upload is ongoing."
	},
	"metadata.url.helperText": {
		"string": "Must be a valid URL",
		"developer_comment": "A message that appears underneath a text box when a user enters text that a web browser would not interpret as a URL."
	},
	"moreLess.less": {
		"string": "Less"
	},
	"moreLess.more": {
		"string": "More"
	},
	"multiSelector.cancel": {
		"string": "Cancel"
	},
	"multiSelector.empty": {
		"string": "No items found"
	},
	"multiSelector.search": {
		"string": "Search…"
	},
	"network.noResponse": {
		"string": "Couldn't connect to {app}, please make sure you're connected to the internet"
	},
	"network.stillWorking": {
		"string": "Still working…"
	},
	"newProject.cancel": {
		"string": "Cancel"
	},
	"notFound.back": {
		"string": "Go to my profile page",
		"developer_comment": "Go to profile page button"
	},
	"notFound.pageTitle": {
		"string": "Page not found"
	},
	"notFound.text": {
		"string": "If you are trying to access an existing workspace, please contact the workspace owner."
	},
	"notFound.title": {
		"string": "Oh no! This page does not exist or you do not have authorized access.",
		"developer_comment": "Not found page title"
	},
	"numericRangeFilter.and": {
		"string": "and"
	},
	"numericRangeFilter.between": {
		"string": "and"
	},
	"numericRangeFilter.enterNumber": {
		"string": "enter number"
	},
	"numericRangeFilter.errorMessage": {
		"string": "First number should be less than second number",
		"developer_comment": "Message when user set range number with min value greater than max value"
	},
	"numericRangeFilter.linkedItems": {
		"string": "Number of similar medias is between",
		"developer_comment": "Filter option that refers to number of similar medias"
	},
	"numericRangeFilter.suggestedItems": {
		"string": "Number of suggested medias is between",
		"developer_comment": "Filter option that refers to number of suggested medias"
	},
	"numericRangeFilter.tiplineRequests": {
		"string": "Number of tipline requests is between",
		"developer_comment": "Filter option that refers to tipline requests"
	},
	"ocrButton.defaultErrorMessage": {
		"string": "Could not extract text from image",
		"developer_comment": "Warning displayed if an error occurred when extracting text from image"
	},
	"ocrButton.inProgress": {
		"string": "Text extraction in progress…",
		"developer_comment": "Message displayed while text is being extracted from an image"
	},
	"ocrButton.label": {
		"string": "Image text extraction",
		"developer_comment": "Button label - when this button is clicked, text is extracted from image"
	},
	"ocrButton.textExtractedSuccessfully": {
		"string": "Text extraction completed",
		"developer_comment": "Banner displayed when text extraction operation for an image is done"
	},
	"passwordChange.changePassword": {
		"string": "Change password"
	},
	"passwordChange.confirmPassword": {
		"string": "Confirm password"
	},
	"passwordChange.currentPassword": {
		"string": "Current password"
	},
	"passwordChange.newPassword": {
		"string": "New password (minimum {min} characters)"
	},
	"passwordChange.signIn": {
		"string": "Got it"
	},
	"passwordChange.successMsg": {
		"string": "You're all set. Now you can log in with your new password."
	},
	"passwordChange.successTitle": {
		"string": "Password updated"
	},
	"passwordChange.title": {
		"string": "Change password"
	},
	"passwordChange.unmatchingPasswords": {
		"string": "Passwords didn't match"
	},
	"passwordReset.confirmedText": {
		"string": "If this email address exists, you will receive an email from {adminEmail} with instructions to reset your password. Make sure it didn't wind up in your spam mailbox. If you aren't receiving our password reset emails, contact {supportEmail}."
	},
	"passwordReset.email": {
		"string": "Email"
	},
	"passwordReset.emailNotValid": {
		"string": "Please enter a valid email address.",
		"developer_comment": "Error message for invalid email address"
	},
	"passwordReset.signIn": {
		"string": "Sign In"
	},
	"passwordReset.text": {
		"string": "Add your address and an email will be sent with further instructions."
	},
	"passwordReset.title": {
		"string": "Reset password",
		"developer_comment": "Reset password page title"
	},
	"privacy.policy.title": {
		"string": "Privacy Policy"
	},
	"project.deleteMessage": {
		"string": "{mediasCount, plural, one {There is 1 item in {folderTitle}. Please choose a destination folder:} other {There are # items in {folderTitle}. Please choose a destination folder:}}"
	},
	"project.name": {
		"string": "folder"
	},
	"project.onlyAdmins": {
		"string": "Only Admins"
	},
	"project.onlyAdminsAndEditors": {
		"string": "Only Admins and Editors"
	},
	"projectActions.defaultErrorMessage": {
		"string": "Error, please try again",
		"developer_comment": "Generic error message displayed when it's not possible to update or delete a collection, folder or list"
	},
	"projectActions.delete": {
		"string": "Delete",
		"developer_comment": "'Delete' here is an infinitive verb"
	},
	"projectActions.makeDefault": {
		"string": "Make default",
		"developer_comment": "Make the folder default"
	},
	"projectActions.move": {
		"string": "Move to…",
		"developer_comment": "'Move' here is an infinitive verb"
	},
	"projectActions.moveOut": {
		"string": "Move out",
		"developer_comment": "Menu option to move a folder out of a collection"
	},
	"projectActions.moveTitle": {
		"string": "Move items and delete folder",
		"developer_comment": "Label for button to move items and delete folder"
	},
	"projectActions.privacy": {
		"string": "Change access",
		"developer_comment": "'Change' here is an infinitive verb"
	},
	"projectActions.privacyMessageAdmins": {
		"string": "Editors and collaborators will not be able to see or access this folder, or any items it contains. All annotations will be preserved."
	},
	"projectActions.privacyMessageAll": {
		"string": "Anyone can see this folder, access its content and annotate it."
	},
	"projectActions.privacyMessageEditors": {
		"string": "Collaborators will not be able to see or access this folder, or any items it contains. All annotations will be preserved."
	},
	"projectActions.rename": {
		"string": "Rename",
		"developer_comment": "'Rename' here is an infinitive verb"
	},
	"projectActions.savedSuccessfully": {
		"string": "Done",
		"developer_comment": "Generic success message displayed when a collection, folder or list is updated or deleted"
	},
	"projectActions.tooltip": {
		"string": "Actions"
	},
	"projectAssignment.more": {
		"string": "+{count} more"
	},
	"projectBlankState.blank": {
		"string": "There are no items here."
	},
	"projectGroup.deleteMessage": {
		"string": "If you delete this collection, all folders will still be accessible outside of the collection.",
		"developer_comment": "A message that appears when a user attempts to delete a collection to warn them that any folders inside will NOT be deleted, and will still be accessible."
	},
	"projectGroup.name": {
		"string": "collection",
		"developer_comment": "A placeholder that appears if for some reason a collection lacks a name. This should never appear to the user, but please localize it just in case."
	},
	"projectHeader.allItems": {
		"string": "All items"
	},
	"projectHeader.feed": {
		"string": "Shared feed"
	},
	"projectHeader.importedReports": {
		"string": "Imported reports"
	},
	"projectHeader.suggestedMatches": {
		"string": "Suggested matches"
	},
	"projectHeader.tiplineInbox": {
		"string": "Tipline inbox"
	},
	"projectHeader.trash": {
		"string": "Trash"
	},
	"projectMoveDialogComponent.choose": {
		"string": "Choose a collection"
	},
	"projectMoveDialogComponent.couldNotMove": {
		"string": "Could not move folder to collection",
		"developer_comment": "Error message displayed when it's not possible to move folder to a collection"
	},
	"projectMoveDialogComponent.createCollection": {
		"string": "Create collection"
	},
	"projectMoveDialogComponent.moveTitle": {
		"string": "Move folder to a collection"
	},
	"projectMoveDialogComponent.movedSuccessfully": {
		"string": "Folder moved to collection successfully",
		"developer_comment": "Message displayed when a folder is moved to a collection"
	},
	"projectMoveDialogComponent.newCollection": {
		"string": "New collection"
	},
	"projectMoveDialogComponent.noCollectionsText": {
		"string": "There are no collections in {teamName}. You need to create a collection first."
	},
	"projectMoveDialogComponent.noCollectionsTitle": {
		"string": "Move folder to a collection"
	},
	"projectMoveDialogComponent.proceedLabel": {
		"string": "Create a new collection"
	},
	"projectMoveDialogComponent.proceedLabel2": {
		"string": "Move to collection"
	},
	"projectSelector.allProjs": {
		"string": "All folders"
	},
	"projectSelector.numProjs": {
		"string": "{length, plural, one {# selected} other {# selected}}",
		"developer_comment": "Label for number of selected folders"
	},
	"projects.spam": {
		"string": "Spam"
	},
	"projects.trash": {
		"string": "Trash"
	},
	"projectsComponent.allItems": {
		"string": "All items",
		"developer_comment": "Label for the 'All items' list displayed on the left sidebar"
	},
	"projectsComponent.couldNotMove": {
		"string": "Could not move folder to collection",
		"developer_comment": "Error message displayed when it's not possible to move folder to a collection"
	},
	"projectsComponent.createCollection": {
		"string": "Create collection",
		"developer_comment": "Button label for creating new collection"
	},
	"projectsComponent.createFolder": {
		"string": "Create folder",
		"developer_comment": "Button label for creating new folder"
	},
	"projectsComponent.createList": {
		"string": "Create list",
		"developer_comment": "Label for a button to create a new list displayed on the left sidebar."
	},
	"projectsComponent.deleteType": {
		"string": "Delete {type}",
		"developer_comment": "'Delete' here is an infinitive verb, and 'type' can be collection, folder or list"
	},
	"projectsComponent.description": {
		"string": "Description"
	},
	"projectsComponent.folders": {
		"string": "Folders",
		"developer_comment": "Label for a collapsable panel displayed on the left sidebar."
	},
	"projectsComponent.importedReports": {
		"string": "Imported reports",
		"developer_comment": "Label for a list displayed on the left sidebar."
	},
	"projectsComponent.invalidMove": {
		"string": "Folders can only be moved to collections",
		"developer_comment": "Message displayed when a folder is moved to something that is not a collection"
	},
	"projectsComponent.lists": {
		"string": "Filtered lists",
		"developer_comment": "List of items with some filters applied"
	},
	"projectsComponent.movedSuccessfully": {
		"string": "Folder moved successfully",
		"developer_comment": "Message displayed when a folder is moved to or from a collection"
	},
	"projectsComponent.newCollection": {
		"string": "New collection",
		"developer_comment": "Dialog title for creating new collection"
	},
	"projectsComponent.newCollectionErrorMessage": {
		"string": "Could not create collection, please try again",
		"developer_comment": "Error message when creating new collection fails"
	},
	"projectsComponent.newCollectionMenu": {
		"string": "New collection",
		"developer_comment": "Menu item for creating new collection"
	},
	"projectsComponent.newCollectionSuccessMessage": {
		"string": "Collection created successfully",
		"developer_comment": "Success message when new collection is created"
	},
	"projectsComponent.newFolder": {
		"string": "New folder",
		"developer_comment": "Dialog title for creating new folder"
	},
	"projectsComponent.newFolderErrorMessage": {
		"string": "Could not create folder, please try again",
		"developer_comment": "Error message when creating new folder fails"
	},
	"projectsComponent.newFolderMenu": {
		"string": "New folder",
		"developer_comment": "Menu item for creating new folder"
	},
	"projectsComponent.newFolderSuccessMessage": {
		"string": "Folder created successfully",
		"developer_comment": "Success message when new folder is created"
	},
	"projectsComponent.newList": {
		"string": "New list",
		"developer_comment": "Title for a dialog to create a new list displayed on the left sidebar."
	},
	"projectsComponent.newListErrorMessage": {
		"string": "Could not create list, please try again",
		"developer_comment": "Error message when creating new list fails"
	},
	"projectsComponent.newListSuccessMessage": {
		"string": "List created successfully",
		"developer_comment": "Success message when new list is created"
	},
	"projectsComponent.noFolders": {
		"string": "No folders in this collection",
		"developer_comment": "Displayed under a collection when there are no folders in it"
	},
	"projectsComponent.privacyDialogButton": {
		"string": "Update access"
	},
	"projectsComponent.privacyDialogOptionAdmins": {
		"string": "Only Admins"
	},
	"projectsComponent.privacyDialogOptionAll": {
		"string": "Everyone with access to this workspace"
	},
	"projectsComponent.privacyDialogOptionEditors": {
		"string": "Only Admins and Editors"
	},
	"projectsComponent.privacyDialogTitle": {
		"string": "Who can see this folder and its content",
		"developer_comment": "Title for folder privacy dialog"
	},
	"projectsComponent.renameType": {
		"string": "Rename {type}",
		"developer_comment": "'Rename' here is an infinitive verb, and 'type' can be collection, folder or list"
	},
	"projectsComponent.sharedFeeds": {
		"string": "Shared feeds",
		"developer_comment": "Feeds of content shared across workspaces"
	},
	"projectsComponent.suggestedMatches": {
		"string": "Suggested matches",
		"developer_comment": "Label for a list displayed on the left sidebar."
	},
	"projectsComponent.tiplineInbox": {
		"string": "Tipline inbox",
		"developer_comment": "Label for a list displayed on the left sidebar."
	},
	"projectsComponent.title": {
		"string": "Title"
	},
	"reportDesigner.addIntro": {
		"string": "Add content to the introduction"
	},
	"reportDesigner.addText": {
		"string": "Add content to the text message"
	},
	"reportDesigner.back": {
		"string": "Back to annotation"
	},
	"reportDesigner.cancelPause": {
		"string": "Go back"
	},
	"reportDesigner.cancelPublish": {
		"string": "Go back"
	},
	"reportDesigner.cantPublish": {
		"string": "Go back to editing"
	},
	"reportDesigner.cantPublishTitle": {
		"string": "Your report is not ready to be published"
	},
	"reportDesigner.confirmPause": {
		"string": "Pause report"
	},
	"reportDesigner.confirmPauseText": {
		"string": "This will stop the report from being sent out to users until it is published again."
	},
	"reportDesigner.confirmPauseTitle": {
		"string": "Do you want to pause the report?"
	},
	"reportDesigner.confirmPublish": {
		"string": "Publish report"
	},
	"reportDesigner.confirmPublishSameStatus": {
		"string": "Publish changes"
	},
	"reportDesigner.confirmPublishStatusChange": {
		"string": "Publish changes and send correction"
	},
	"reportDesigner.confirmPublishText": {
		"string": "{demand, plural, one {You are about to send this report to the user who has requested this item.} other {You are about to send this report to the # users who have requested this item.}}"
	},
	"reportDesigner.confirmPublishText2": {
		"string": "All future users who request this item will receive this version of the report while it remains published."
	},
	"reportDesigner.confirmPublishTitle": {
		"string": "Ready to publish your report?"
	},
	"reportDesigner.confirmRepublishResendText": {
		"string": "{demand, plural, one {Because the status has changed, the updated report will be sent as a {correctionLink} to the user who has received the previous version of this report.} other {Because the status has changed, the updated report will be sent as a {correctionLink} to the # users who have received the previous version of this report.}}"
	},
	"reportDesigner.confirmRepublishResendTitle": {
		"string": "Ready to publish your changes?"
	},
	"reportDesigner.confirmRepublishTitle": {
		"string": "Ready to publish your changes?"
	},
	"reportDesigner.content": {
		"string": "Summary"
	},
	"reportDesigner.contentScreenHeader": {
		"string": "Content with warning cannot<br />be published as a visual card.",
		"developer_comment": "Header for visual card when there's a content warning active and no alternative image is set"
	},
	"reportDesigner.copyButtonInactive": {
		"string": "Copied"
	},
	"reportDesigner.correction": {
		"string": "correction"
	},
	"reportDesigner.darkOverlay": {
		"string": "Dark overlay"
	},
	"reportDesigner.datePublished": {
		"string": "Date published"
	},
	"reportDesigner.description": {
		"string": "Summary"
	},
	"reportDesigner.error": {
		"string": "Sorry, an error occurred while updating the report settings. Please try again and contact {supportEmail} if the condition persists."
	},
	"reportDesigner.firstSent": {
		"string": "First published"
	},
	"reportDesigner.goBack": {
		"string": "Go back to the annotation page and remove the content warning.",
		"developer_comment": "The annotation page means the page where item annotation is made (aka the item page), not the page of an annotation"
	},
	"reportDesigner.headline": {
		"string": "Title"
	},
	"reportDesigner.incorrectWarning": {
		"string": "Was this content warning incorrectly applied?",
		"developer_comment": "Header for visual card when there's a content warning active and no alternative image is set"
	},
	"reportDesigner.introduction": {
		"string": "Introduction"
	},
	"reportDesigner.introductionSub": {
		"string": "Use {query_date} placeholder to display the date of the original query. Use {status} to communicate the status of the article."
	},
	"reportDesigner.lastPublished": {
		"string": "Last published"
	},
	"reportDesigner.nothingToPreview": {
		"string": "Start creating your report to preview what users will see when they receive it."
	},
	"reportDesigner.pause": {
		"string": "Pause"
	},
	"reportDesigner.publish": {
		"string": "Publish"
	},
	"reportDesigner.removeImage": {
		"string": "Remove image"
	},
	"reportDesigner.report": {
		"string": "Fact-check"
	},
	"reportDesigner.reportImagePreviewTitle": {
		"string": "Report preview",
		"developer_comment": "Image caption spoken by screen readers but not seen by most users"
	},
	"reportDesigner.republishAndResend": {
		"string": "{demand, plural, one {Also send this updated report as a {correctionLink} to the user who has received the previous version of this report.} other {Also send this updated report as a {correctionLink} to the # users who have received the previous version of this report.}}"
	},
	"reportDesigner.sentCount": {
		"string": "Reports sent"
	},
	"reportDesigner.statusLabel": {
		"string": "Status label"
	},
	"reportDesigner.text": {
		"string": "Text",
		"developer_comment": "Label used for radio button that toggles the report mode to text"
	},
	"reportDesigner.textTitle": {
		"string": "Title"
	},
	"reportDesigner.textUrl": {
		"string": "Article URL",
		"developer_comment": "Text report field"
	},
	"reportDesigner.title": {
		"string": "Design your report"
	},
	"reportDesigner.uploadAlternative": {
		"string": "Upload an alternative image or<br />uncheck the visual card option.",
		"developer_comment": "Header for visual card when there's a content warning active and no alternative image is set"
	},
	"reportDesigner.url": {
		"string": "Website URL"
	},
	"reportDesigner.useDefaultImage": {
		"string": "Use default image"
	},
	"reportDesigner.visual": {
		"string": "Visual",
		"developer_comment": "Label used for radio button that toggles the report mode to visual"
	},
	"reportDesigner.warning": {
		"string": "Warning — sharing this will expose information to people outside your private workspace. Proceed with caution."
	},
	"reportDesignerToolbar.cantPublishContentFlag": {
		"string": "Your item still has a visual card with a content warning. Upload an alternative image or uncheck the visual card option."
	},
	"reportDesignerToolbar.cantPublishDefault": {
		"string": "The report for {language} cannot be empty because it is the default language. You must have content in Report Text or Visual Card for {language}. Or, you can right-click on the tab for another language to make it the default language."
	},
	"reportDesignerToolbar.cantPublishInitial": {
		"string": "You must have at least Report Text or Visual Card selected in order to publish the report."
	},
	"reportDesignerToolbar.cantPublishStatus": {
		"string": "Your item still has the default status {status} and must be changed to a different status before it can be published."
	},
	"reportDesignerToolbar.cantPublishText": {
		"string": "You must add a title and a summary to the fact-check in order to publish the report."
	},
	"reportStatusCell.paused": {
		"string": "Paused"
	},
	"reportStatusCell.published": {
		"string": "Published"
	},
	"reportStatusCell.unpublished": {
		"string": "Unpublished"
	},
	"roleSelect.admin": {
		"string": "Admin"
	},
	"roleSelect.collaborator": {
		"string": "Collaborator"
	},
	"roleSelect.editor": {
		"string": "Editor"
	},
	"rule.copyOf": {
		"string": "Copy of {ruleName}"
	},
	"ruleBody.if": {
		"string": "If"
	},
	"ruleBody.ruleName": {
		"string": "പേര്"
	},
	"ruleBody.ruleNameValidation": {
		"string": "Rule name is required"
	},
	"ruleBody.then": {
		"string": "Then"
	},
	"ruleOperatorWrapper.and": {
		"string": "And"
	},
	"ruleOperatorWrapper.or": {
		"string": "Or"
	},
	"ruleOperatorWrapper.removeTheAbove": {
		"string": "Remove item above"
	},
	"ruleToolbar.back": {
		"string": "Back"
	},
	"ruleToolbar.delete": {
		"string": "Delete"
	},
	"ruleToolbar.deleteConfirmationLabel": {
		"string": "Delete rule"
	},
	"ruleToolbar.deleteConfirmationText": {
		"string": "You cannot undo this action."
	},
	"ruleToolbar.deleteConfirmationTitle": {
		"string": "Are you sure you want to delete this rule?"
	},
	"ruleToolbar.duplicate": {
		"string": "Duplicate"
	},
	"ruleToolbar.leaveConfirmationText": {
		"string": "If you continue, you will lose your changes."
	},
	"ruleToolbar.leaveConfirmationTitle": {
		"string": "Close without saving?"
	},
	"ruleToolbar.more": {
		"string": "More"
	},
	"rulesComponent.defaultErrorMessage": {
		"string": "Could not save rules"
	},
	"rulesComponent.savedSuccessfully": {
		"string": "Rules saved successfully"
	},
	"rulesTableHead.name": {
		"string": "പേര്",
		"developer_comment": "Table header for rule names"
	},
	"rulesTableHead.updated": {
		"string": "Updated",
		"developer_comment": "Table header for rule update dates"
	},
	"rulesTableToolbar.add": {
		"string": "New rule"
	},
	"rulesTableToolbar.delete": {
		"string": "Delete"
	},
	"rulesTableToolbar.deleteConfirmationLabel": {
		"string": "{numSelected, plural, one {Delete # rule} other {Delete # rules}}"
	},
	"rulesTableToolbar.deleteConfirmationText": {
		"string": "{numSelected, plural, one {You have selected # rule for deletion. Do you want to delete it? You cannot undo this action.} other {You have selected # rules for deletion. Do you want to delete all of them? You cannot undo this action.}}"
	},
	"rulesTableToolbar.deleteConfirmationTitle": {
		"string": "Do you want to delete the selected rules?"
	},
	"rulesTableToolbar.save": {
		"string": "Save"
	},
	"rulesTableToolbar.selected": {
		"string": "{numSelected, plural, one {# selected} other {# selected}}"
	},
	"rulesTableToolbar.subtitle": {
		"string": "Create automations to organize folders and customize your workflow."
	},
	"rulesTableToolbar.title": {
		"string": "Rules"
	},
	"saveList.cancel": {
		"string": "Cancel"
	},
	"saveList.create": {
		"string": "Create new list",
		"developer_comment": "'Create' here is an infinitive verb"
	},
	"saveList.defaultErrorMessage": {
		"string": "Could not save filters, please try again",
		"developer_comment": "Error message displayed when it's not possible to save a list"
	},
	"saveList.newList": {
		"string": "Save list"
	},
	"saveList.saveFeed": {
		"string": "Save and share",
		"developer_comment": "'Save and share' here are in infinitive form - it's a button label, to save the current set of filters applied to a search result as feed filters."
	},
	"saveList.saveList": {
		"string": "Save",
		"developer_comment": "'Save' here is in infinitive form - it's a button label, to save the current set of filters applied to a search result as a list."
	},
	"saveList.savedSuccessfully": {
		"string": "Filters saved successfully",
		"developer_comment": "Success message displayed when a list is saved"
	},
	"saveList.title": {
		"string": "Enter new list name"
	},
	"saveList.update": {
		"string": "Save changes to the list \"{listName}\"",
		"developer_comment": "'Save' here is an infinitive verb"
	},
	"saveList.updateSpecialPage": {
		"string": "Save changes to the list",
		"developer_comment": "'Save' here is an infinitive verb"
	},
	"saveTag.couldNotSave": {
		"string": "Could not save tag",
		"developer_comment": "Error message displayed when it's not possible to save a team tag"
	},
	"saveTag.name": {
		"string": "പേര്"
	},
	"saveTag.rule": {
		"string": "Automatically tag items matching the following conditions:"
	},
	"saveTag.save": {
		"string": "Save tag"
	},
	"saveTag.savedSuccessfully": {
		"string": "Tag saved successfully",
		"developer_comment": "Message displayed when a team tag is saved"
	},
	"saveTag.titleCreate": {
		"string": "Create new tag"
	},
	"saveTag.titleEdit": {
		"string": "Edit tag"
	},
	"savedSearch.deleteMessage": {
		"string": "Are you sure? This list is shared among all users of {teamName}. After deleting it, no user will be able to access it."
	},
	"savedSearch.name": {
		"string": "list"
	},
	"search": {
		"string": "Search",
		"developer_comment": "This is a label on a button that the user presses in order to execute a search query."
	},
	"search.afterDate": {
		"string": "after",
		"developer_comment": "String displayed before a date picker"
	},
	"search.allClaimsTitle": {
		"string": "All items"
	},
	"search.and": {
		"string": "and",
		"developer_comment": "Logical operator to be applied when filtering by multiple tags"
	},
	"search.annotatedBy": {
		"string": "Annotated by",
		"developer_comment": "Prefix label for field to filter by annotated by"
	},
	"search.anyDate": {
		"string": "any date",
		"developer_comment": "Date picker placeholder"
	},
	"search.applyFilters": {
		"string": "Apply filter",
		"developer_comment": "Button to perform query with specified filters"
	},
	"search.archived": {
		"string": "Tipline request is",
		"developer_comment": "Prefix label for field to filter by Tipline request"
	},
	"search.assignedTo": {
		"string": "Assigned to",
		"developer_comment": "Prefix label for field to filter by assigned users"
	},
	"search.beforeDate": {
		"string": "and",
		"developer_comment": "String displayed between after and before date pickers"
	},
	"search.cancel": {
		"string": "Cancel",
		"developer_comment": "A label on a button that lets a user cancel typing search text, deleting the text in the process."
	},
	"search.categoriesHeading": {
		"string": "Tag is",
		"developer_comment": "Prefix label for field to filter by tags"
	},
	"search.claim": {
		"string": "Claim field is",
		"developer_comment": "Prefix label for field to filter by claim"
	},
	"search.clusterTeams": {
		"string": "Organization is",
		"developer_comment": "Prefix label for field to filter by workspace"
	},
	"search.collection": {
		"string": "Collection is",
		"developer_comment": "Prefix label for field to filter by collection"
	},
	"search.confirmed": {
		"string": "Confirmed",
		"developer_comment": "Allow filtering by confirmed items"
	},
	"search.dateLastSubmittedHeading": {
		"string": "Media published"
	},
	"search.datePublishedHeading": {
		"string": "Report published"
	},
	"search.dateRelative": {
		"string": "less than",
		"developer_comment": "This is a label in a drop down selector, to filter a search by dates. The dates are relative to the current day and in English this would be the first part of a phrase like 'Report published less than 10 months ago'."
	},
	"search.dateStartEnd": {
		"string": "between",
		"developer_comment": "This is a label in a drop down selector, to filter a search by dates. The user selects a range of dates including a start and end date. In English this would be the first part of a phrase like 'Report published between February 3, 2022 and February 9, 2022'."
	},
	"search.dateSubmittedHeading": {
		"string": "Media submitted"
	},
	"search.dateUpdatedHeading": {
		"string": "Item updated"
	},
	"search.empty": {
		"string": "Empty",
		"developer_comment": "Allow filtering by claim with no value set"
	},
	"search.emptyAssign": {
		"string": "Not assigned",
		"developer_comment": "Allow filtering by assigned_to with no value set"
	},
	"search.fieldAnd": {
		"string": "and",
		"developer_comment": "Logical operator 'AND' to be applied when filtering by multiple fields"
	},
	"search.fieldOr": {
		"string": "or",
		"developer_comment": "Logical operator 'OR' to be applied when filtering by multiple fields"
	},
	"search.file": {
		"string": "Search with file",
		"developer_comment": "This is a label on a button that the user presses in order to choose a video, image, or audio file that will be searched for. The file itself is not uploaded, so 'upload' would be the wrong verb to use here. This action opens a file picker prompt."
	},
	"search.folderHeading": {
		"string": "Folder is",
		"developer_comment": "Prefix label for field to filter by folder to which items belong"
	},
	"search.inputHint": {
		"string": "Search",
		"developer_comment": "Placeholder for search keywords input"
	},
	"search.itemRead": {
		"string": "Read",
		"developer_comment": "Describes media read"
	},
	"search.itemUnread": {
		"string": "Unread",
		"developer_comment": "Describes media unread"
	},
	"search.language": {
		"string": "Language is",
		"developer_comment": "Prefix label for field to filter by language"
	},
	"search.nextPage": {
		"string": "Next page"
	},
	"search.noResults": {
		"string": "No results found.",
		"developer_comment": "A message that appears when a user searches for similar items, but we could not find any results."
	},
	"search.notEmpty": {
		"string": "Not empty",
		"developer_comment": "Allow filtering by claim with any value set"
	},
	"search.notEmptyAssign": {
		"string": "Assigned",
		"developer_comment": "Allow filtering by assigned_to with any value set"
	},
	"search.notInAny": {
		"string": "Not in any collection",
		"developer_comment": "Label displayed before listing all folders that are not part of any collection"
	},
	"search.or": {
		"string": "OR",
		"developer_comment": "This is a label that appears between two mutually exclusive search options, indicating that you may select one option 'OR' the other."
	},
	"search.previousPage": {
		"string": "Previous page"
	},
	"search.publishedBy": {
		"string": "Report published by",
		"developer_comment": "Prefix label for field to filter by published by"
	},
	"search.read": {
		"string": "Item is",
		"developer_comment": "Prefix label for field to filter by media read"
	},
	"search.relativeDays": {
		"string": "days ago",
		"developer_comment": "This is a label in a drop down selector, and will appear a sentence format like 'Report published less than 3 days ago'."
	},
	"search.relativeMonths": {
		"string": "months ago",
		"developer_comment": "This is a label in a drop down selector, and will appear a sentence format like 'Report published less than 3 months ago'."
	},
	"search.relativeWeeks": {
		"string": "weeks ago",
		"developer_comment": "This is a label in a drop down selector, and will appear a sentence format like 'Report published less than 3 weeks ago'."
	},
	"search.relativeYears": {
		"string": "years ago",
		"developer_comment": "This is a label in a drop down selector, and will appear a sentence format like 'Report published less than 3 years ago'."
	},
	"search.reportStatus": {
		"string": "Report status is",
		"developer_comment": "Prefix label for field to filter by report status"
	},
	"search.reportStatusPaused": {
		"string": "Paused",
		"developer_comment": "Refers to a report status"
	},
	"search.reportStatusPublished": {
		"string": "Published",
		"developer_comment": "Refers to a report status"
	},
	"search.reportStatusUnpublished": {
		"string": "Unpublished",
		"developer_comment": "Refers to a report status"
	},
	"search.setText": {
		"string": "Set text",
		"developer_comment": "A label on a button that lets a user set the text on an associated popup to the original input field."
	},
	"search.show": {
		"string": "Type is",
		"developer_comment": "Prefix label for field to filter by media type"
	},
	"search.showAudios": {
		"string": "Audio",
		"developer_comment": "Describes media type Audio"
	},
	"search.showBlank": {
		"string": "Imported report",
		"developer_comment": "Describes media type unspecified"
	},
	"search.showClaims": {
		"string": "Text",
		"developer_comment": "Describes media type Text"
	},
	"search.showImages": {
		"string": "ചിത്രം",
		"developer_comment": "Describes media type Image"
	},
	"search.showLinks": {
		"string": "ലിങ്ക് ",
		"developer_comment": "Describes media type Link"
	},
	"search.showSimilar": {
		"string": "Show similar",
		"developer_comment": "Allow user to show/hide secondary items"
	},
	"search.showVideos": {
		"string": "Video",
		"developer_comment": "Describes media type Video"
	},
	"search.statusHeading": {
		"string": "Item status is",
		"developer_comment": "Prefix label for field to filter by status"
	},
	"search.unconfirmed": {
		"string": "Unconfirmed",
		"developer_comment": "Allow filtering by unconfirmed items"
	},
	"search.userHeading": {
		"string": "Created by",
		"developer_comment": "Prefix label for field to filter by item creator"
	},
	"searchFieldChannel.anyTipline": {
		"string": "Any tipline",
		"developer_comment": "Filter option that refers to items created via a tipline"
	},
	"searchFieldChannel.api": {
		"string": "API",
		"developer_comment": "Filter option that refers to items created via the API"
	},
	"searchFieldChannel.browserExtension": {
		"string": "Browser extension",
		"developer_comment": "Filter option that refers to items created via the browser extension"
	},
	"searchFieldChannel.manual": {
		"string": "Manual",
		"developer_comment": "Filter option that refers to items created manually"
	},
	"searchFieldChannel.sharedDatabase": {
		"string": "Shared Database",
		"developer_comment": "Filter option that refers to items created from the shared database."
	},
	"searchFieldChannel.webForm": {
		"string": "Web Form",
		"developer_comment": "Filter option that refers to items created via a web form"
	},
	"searchFieldCountry.label": {
		"string": "Country is",
		"developer_comment": "Prefix label for field to filter by country"
	},
	"searchFieldSource.label": {
		"string": "Source is",
		"developer_comment": "Prefix label for field to filter by source"
	},
	"searchFields.clear": {
		"string": "Clear filters",
		"developer_comment": "Tooltip for button to remove any applied filters"
	},
	"searchKeyword.clear": {
		"string": "Clear keyword search",
		"developer_comment": "Tooltip for button to remove any applied keyword search"
	},
	"searchKeywordConfig.accounts": {
		"string": "ഉറവിടം"
	},
	"searchKeywordConfig.allMetadataAnswers": {
		"string": "All metadata answers"
	},
	"searchKeywordConfig.allNotes": {
		"string": "All notes"
	},
	"searchKeywordConfig.analysisContent": {
		"string": "Analysis content"
	},
	"searchKeywordConfig.analysisTitle": {
		"string": "Analysis title"
	},
	"searchKeywordConfig.annotation": {
		"string": "Annotation",
		"developer_comment": "Header before a listing of annotation options"
	},
	"searchKeywordConfig.claimDescription": {
		"string": "Claim description"
	},
	"searchKeywordConfig.factCheckSummary": {
		"string": "Fact-check summary"
	},
	"searchKeywordConfig.factCheckTitle": {
		"string": "Fact-check title"
	},
	"searchKeywordConfig.item": {
		"string": "തരം"
	},
	"searchKeywordConfig.mediaContent": {
		"string": "Media content"
	},
	"searchKeywordConfig.mediaTitle": {
		"string": "Media title"
	},
	"searchKeywordConfig.mediaUrl": {
		"string": "Media URL"
	},
	"searchKeywordConfig.ocr": {
		"string": "Extracted text (OCR)"
	},
	"searchKeywordConfig.tags": {
		"string": "Tags"
	},
	"searchResults.itemsCount": {
		"string": "{count, plural, one {1 / 1} other {{from} - {to} / #}}"
	},
	"searchResults.withSelection": {
		"string": "{selectedCount, plural, one {(# selected)} other {(# selected)}}",
		"developer_comment": "Label for number of selected items"
	},
	"sensitiveContentMenuButton.adult": {
		"string": "Adult (nudity, pornographic)",
		"developer_comment": "Label for adult content type"
	},
	"sensitiveContentMenuButton.contentWarning": {
		"string": "Content warning",
		"developer_comment": "Button that pops sensitive content screen settings"
	},
	"sensitiveContentMenuButton.enableSwitch": {
		"string": "Enable content warning",
		"developer_comment": "Switch to enable sensitive content screen"
	},
	"sensitiveContentMenuButton.medical": {
		"string": "Medical conditions/procedures",
		"developer_comment": "Label for medical content type"
	},
	"sensitiveContentMenuButton.selectCategory": {
		"string": "Select a category",
		"developer_comment": "Header for sensitive content types"
	},
	"sensitiveContentMenuButton.typeOther": {
		"string": "Type other",
		"developer_comment": "Label for other content type"
	},
	"sensitiveContentMenuButton.violence": {
		"string": "Violence",
		"developer_comment": "Label for violence content type"
	},
	"sentence.lastSeparator": {
		"string": "and"
	},
	"sentence.separator": {
		"string": ","
	},
	"setSourceDialog.confirm": {
		"string": "Do you want to use the existing sources for this media?",
		"developer_comment": "Confirm message to relate media to an existing source"
	},
	"setSourceDialog.existDescription": {
		"string": "The source <b>{name}</b> already exists.",
		"developer_comment": "Text to inform user about existing source"
	},
	"setSourceDialog.existDescriptionWithUrl": {
		"string": "The source <b>{name}</b> with the primary URL <b>{url}</b> already exists.",
		"developer_comment": "Text to inform user about existing source"
	},
	"setSourceDialog.existingSource": {
		"string": "Existing source name",
		"developer_comment": "Dialog title for existing source with same name"
	},
	"setSourceDialog.existingSourceWithUrl": {
		"string": "Existing source URL",
		"developer_comment": "Dialog title for existing source with same primary url"
	},
	"setSourceDialog.useExistingSource": {
		"string": "Use existing source",
		"developer_comment": "Submit button to relate media to an existing source"
	},
	"settingsHeader.save": {
		"string": "Save"
	},
	"shortTextRespondTask.answerTask": {
		"string": "Answer task"
	},
	"shortTextRespondTask.cancelTask": {
		"string": "Cancel"
	},
	"shortTextRespondTask.responseHint": {
		"string": "Answer here."
	},
	"similarityComponent.blurb": {
		"string": "Automatically group items together if they are similar.",
		"developer_comment": "Subtitle to similarity matching settings page"
	},
	"similarityComponent.dateThreshold": {
		"string": "Similar content last submitted more than {maxTime} months ago will only be suggested"
	},
	"similarityComponent.dateThresholdSettings": {
		"string": "Limit matching to recently submitted content",
		"developer_comment": "Allow user to enable/disable similarity matching based on submitted date"
	},
	"similarityComponent.masterSwitchLabelOff": {
		"string": "Automated matching is OFF"
	},
	"similarityComponent.masterSwitchLabelOn": {
		"string": "Automated matching is ON"
	},
	"similarityComponent.maximumDuration": {
		"string": "Maximum duration in seconds"
	},
	"similarityComponent.minimumDuration": {
		"string": "Minimum duration in seconds"
	},
	"similarityComponent.minimumRequests": {
		"string": "Minimum number of requests"
	},
	"similarityComponent.save": {
		"string": "Save"
	},
	"similarityComponent.savedSuccessfully": {
		"string": "Similarity settings saved successfully",
		"developer_comment": "Banner displayed when similarity settings are saved successfully"
	},
	"similarityComponent.title": {
		"string": "Similarity matching",
		"developer_comment": "Title to similarity matching settings page"
	},
	"singleChoiceTask.addOther": {
		"string": "Add \"Other\""
	},
	"singleChoiceTask.addValue": {
		"string": "Add Option"
	},
	"singleChoiceTask.other": {
		"string": "Other"
	},
	"singleChoiceTask.value": {
		"string": "Value"
	},
	"slackConfig.text": {
		"string": "Send notifications to Slack channels when items are added to specific folders"
	},
	"slackConfigDialogComponent.addEvent": {
		"string": "+ Add event",
		"developer_comment": "Button label to event selector"
	},
	"slackConfigDialogComponent.anyActivity": {
		"string": "Any workspace activity",
		"developer_comment": "Selecting this event will trigger notification upon any workspace activity"
	},
	"slackConfigDialogComponent.cancel": {
		"string": "Cancel"
	},
	"slackConfigDialogComponent.channel": {
		"string": "Slack channel"
	},
	"slackConfigDialogComponent.defaultErrorMessage": {
		"string": "Could not save Slack settings"
	},
	"slackConfigDialogComponent.defaultLabel": {
		"string": "Notification {number}",
		"developer_comment": "Default label for new notification. I.e.: Notification 1, Notification 2..."
	},
	"slackConfigDialogComponent.if": {
		"string": "If",
		"developer_comment": "Header to event selector. E.g.: If 'Item is added to' ..."
	},
	"slackConfigDialogComponent.itemAdded": {
		"string": "Item is added to folder",
		"developer_comment": "Selecting this event will trigger notification whenever an item is added to or moved to a folder"
	},
	"slackConfigDialogComponent.itemIsAddedTo": {
		"string": "Item is added to",
		"developer_comment": "Label to folder selector component"
	},
	"slackConfigDialogComponent.label": {
		"string": "Notification name"
	},
	"slackConfigDialogComponent.new": {
		"string": "+ New",
		"developer_comment": "Button to create a new notification"
	},
	"slackConfigDialogComponent.noChannelError": {
		"string": "Please add the Slack channel where notifications will be sent"
	},
	"slackConfigDialogComponent.noConditionError": {
		"string": "Please select a condition to send notifications"
	},
	"slackConfigDialogComponent.noWebhookError": {
		"string": "Please add the Slack webhook address"
	},
	"slackConfigDialogComponent.notifications": {
		"string": "Notifications"
	},
	"slackConfigDialogComponent.save": {
		"string": "Save"
	},
	"slackConfigDialogComponent.savedSuccessfully": {
		"string": "Slack settings saved successfully"
	},
	"slackConfigDialogComponent.statusChanged": {
		"string": "Status is changed to",
		"developer_comment": "Selecting this event will trigger notification whenever an item status is changed"
	},
	"slackConfigDialogComponent.then": {
		"string": "Then send notification to",
		"developer_comment": "Header to notification destination input. E.g.: Then send notification to '#general'"
	},
	"slackConfigDialogComponent.title": {
		"string": "Send notifications to Slack channels when items are added to specific folders"
	},
	"slackConfigDialogComponent.webhook": {
		"string": "Slack incoming webhook"
	},
	"smoochBot.addResource": {
		"string": "Add resource"
	},
	"smoochBot.descriptionGreeting": {
		"string": "The first message that is sent to the user. It introduces your organization and the service you provide through this bot."
	},
	"smoochBot.descriptionInactive": {
		"string": "This message is sent to any user that has sent a message to the tipline when the Check Message bot is set to inactive."
	},
	"smoochBot.descriptionInvalidFormat": {
		"string": "An automatic message sent to the user when they have sent a file that is not supported by Check."
	},
	"smoochBot.descriptionMainMenu": {
		"string": "A menu asking the user to choose between a set of options. This message automatically follows the Greeting message. 9 cannot be used as an option in the main menu."
	},
	"smoochBot.descriptionNewsletter1": {
		"string": "Please complete the steps below to send a weekly newsletter:"
	},
	"smoochBot.descriptionNewsletter2": {
		"string": "1. Compose your newsletter"
	},
	"smoochBot.descriptionNewsletter3": {
		"string": "2. Select a day and time of the week"
	},
	"smoochBot.descriptionNoAction": {
		"string": "This message will be sent to users if, after a conversation is initiated, they do not select either option: receive a resource or submit content to verify. This message will also be sent to users who submitted content without waiting for the query prompt."
	},
	"smoochBot.descriptionOptionNotAvailable": {
		"string": "The message sent if the user response to a menu is not a valid menu scenario."
	},
	"smoochBot.descriptionPrivacyStatementContent": {
		"string": "Privacy Statement content. Edit the text below, or replace it with custom content."
	},
	"smoochBot.descriptionPrivacyStatementGreeting": {
		"string": "By default, the following Privacy Statement is available to all users. When replacing it with a custom one, you must do so for each language your bot is active in."
	},
	"smoochBot.descriptionPrivacyStatementGreeting2": {
		"string": "The option '9' must be referenced for users to access the Privacy Statement on the Main menu."
	},
	"smoochBot.descriptionQueryPrompt": {
		"string": "The message asking the user to submit content for a fact-check."
	},
	"smoochBot.descriptionQueryReceived": {
		"string": "The confirmation sent to the user after a valid query from the user has been received."
	},
	"smoochBot.descriptionReportUpdated": {
		"string": "The message sent to the user when status of a report has changed. The report must be completed for this message to be sent."
	},
	"smoochBot.descriptionSecondaryMenu": {
		"string": "An optional menu asking the user to choose from a set of options. When a user replies with one of the options, the bot can send a report or direct them to another bot message."
	},
	"smoochBot.descriptionSubscription": {
		"string": "Present the value of your newsletter to users. All users who opt-in will receive any future newsletter."
	},
	"smoochBot.designYourBot": {
		"string": "Design your bot",
		"developer_comment": "Title of tipline settings page"
	},
	"smoochBot.footnoteGreeting": {
		"string": "The following statement and option will be automatically added at the end of this message: 'We will never share your personally identifiable information. Reply 9 to read our Privacy and Purpose statement'."
	},
	"smoochBot.footnoteGreeting2": {
		"string": "The default Privacy Statement can be replaced with a custom one under the option 'Privacy Statement' on this page."
	},
	"smoochBot.labelContent": {
		"string": "Content and translation",
		"developer_comment": "Button label in tipline settings page"
	},
	"smoochBot.labelGreeting": {
		"string": "Greeting"
	},
	"smoochBot.labelInactive": {
		"string": "Notice of inactivity"
	},
	"smoochBot.labelInvalidFormat": {
		"string": "Invalid format"
	},
	"smoochBot.labelMainMenu": {
		"string": "Main menu"
	},
	"smoochBot.labelNewsletter": {
		"string": "Newsletter"
	},
	"smoochBot.labelNewsletterV2": {
		"string": "Newsletter content"
	},
	"smoochBot.labelNoAction": {
		"string": "No action from user"
	},
	"smoochBot.labelOptionNotAvailable": {
		"string": "Option not available"
	},
	"smoochBot.labelPrivacyStatement": {
		"string": "Privacy Statement"
	},
	"smoochBot.labelQueryPrompt": {
		"string": "Query prompt"
	},
	"smoochBot.labelQueryReceived": {
		"string": "Query received"
	},
	"smoochBot.labelReportUpdated": {
		"string": "Report updated"
	},
	"smoochBot.labelSecondaryMenu": {
		"string": "Secondary menu"
	},
	"smoochBot.labelSubscription": {
		"string": "Subscription opt-in"
	},
	"smoochBot.menuKeywords": {
		"string": "Keywords separated by comma"
	},
	"smoochBot.newResourceTitle": {
		"string": "New bot resource"
	},
	"smoochBot.placeholderGreeting": {
		"string": "Hi! Welcome to [Name of your organization]’s fact-checking bot."
	},
	"smoochBot.placeholderInactive": {
		"string": "❌Thank you for your message. Our fact-checking service is currently *inactive.*\n\nContact us at *[email or other contact]* for further inquiries."
	},
	"smoochBot.placeholderInvalidFormat": {
		"string": "❌Sorry, we can't accept this type of message for verification at this time.\n\nWe can accept most images, videos, links, text messages, and shared WhatsApp messages."
	},
	"smoochBot.placeholderMainMenu": {
		"string": "📌*Main Menu*\n\n*Reply 1* (or 🔍) to submit a request for a fact-check about an article, video, image, or other content.\n*Reply 2* (or 🦠) to get the latest information about coronavirus disease (COVID-19)"
	},
	"smoochBot.placeholderNewsletter": {
		"string": "Type to compose your newsletter. You can add content from the RSS below."
	},
	"smoochBot.placeholderNewsletterBulletPoint": {
		"string": "Add an article"
	},
	"smoochBot.placeholderNewsletterIntroduction": {
		"string": "Type something"
	},
	"smoochBot.placeholderOptionNotAvailable": {
		"string": "🤖I'm sorry, I didn't understand your message. Please try again!"
	},
	"smoochBot.placeholderQueryPrompt": {
		"string": "*Please enter the question, link, picture, video or audio that you want fact-checked,* followed by any context related to that item. Your request will be sent to fact-checkers about 15 seconds after your last message.\n\n*Reply 0 (or 📌)* to cancel and go back to the *Main Menu*"
	},
	"smoochBot.placeholderQueryReceived": {
		"string": "Thank you! Your request has been received. Responses are being aggregated and sorted, and we're working on fact-checking your questions.\n\n✔️*Follow this link for an updated list of common questions that we have fact-checked:* [ Link to a page of fact-checks on your website ]\n\n👉*Reply with any text* to get back to the *Main Menu* 📌"
	},
	"smoochBot.placeholderReportUpdated": {
		"string": "❗️The fact-check that we sent to you has been *updated* with new information:"
	},
	"smoochBot.placeholderSecondaryMenu": {
		"string": "*Information about Coronavirus disease (COVID-19)* 🦠\n\n👉*Reply with any one of the following numbers (or emoji) to get information about that topic:*\n\n*1:* How do I protect myself and/or my family? 👨‍👩‍👧\n*2:* I think I might be getting sick 🤒\n*3:* How can I handle stress associated with COVID-19? ❤️\n*4:* Information about cases and recoveries globally 📊\n*5:* Latest updates from the World Health Organization 🌐\n\n*Reply 0* to get back to the *Main Menu* 📌"
	},
	"smoochBot.placeholderSubscription": {
		"string": "Type to compose your prompt for newsletter opt-in."
	},
	"smoochBot.settings": {
		"string": "Settings"
	},
	"smoochBot.tos": {
		"string": "Terms of Service ({language})"
	},
	"smoochBotComponent.back": {
		"string": "Go back to editing",
		"developer_comment": "Button label to close error dialog on tipline settings page"
	},
	"smoochBotComponent.contactUs": {
		"string": "Contact us to setup"
	},
	"smoochBotComponent.install": {
		"string": "Install"
	},
	"smoochBotComponent.missingInformationBody": {
		"string": "The step '11. Newsletter opt-in and opt-out' is missing a placeholder.",
		"developer_comment": "Content of dialog that opens when there is a validation error on tipline settings"
	},
	"smoochBotComponent.missingInformationTitle": {
		"string": "Missing information",
		"developer_comment": "Title of dialog that opens when there is a validation error on tipline settings"
	},
	"smoochBotComponent.save": {
		"string": "Publish"
	},
	"smoochBotComponent.savedSuccessfully": {
		"string": "Tipline settings saved successfully",
		"developer_comment": "Banner displayed when tipline settings are saved successfully"
	},
	"smoochBotComponent.title": {
		"string": "Tipline"
	},
	"smoochBotConfig.subscriptionHeader": {
		"string": "You are currently {subscription_status} to our newsletter."
	},
	"smoochBotContentAndTranslation.addMoreInformationDefault": {
		"string": "Are you ready to submit?",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.addMoreInformationDescription": {
		"string": "This message is sent to user after they send content, to make sure all the information they want to submit has been provided.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.addMoreInformationTitle": {
		"string": "Submit content",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.error": {
		"string": "The placeholder {subscription_status} is missing from your custom content or translation",
		"developer_comment": "Error message displayed on the tipline settings page when the placeholder is not present"
	},
	"smoochBotContentAndTranslation.feedbackDefault": {
		"string": "Are these fact-checks answering your question?",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.feedbackDescription": {
		"string": "When fact-checks are returned to the user, the bot automatically follows up to ask if the results are satisfactory.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.feedbackTitle": {
		"string": "Feedback",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.greetingsDefault": {
		"string": "Welcome to our fact-checking bot. Use the main menu to navigate.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.greetingsDescription": {
		"string": "The first message that is sent to the user. It introduces your organization and the service you provide through this bot.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.greetingsTitle": {
		"string": "Greetings",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.moreContentPromptDefault": {
		"string": "Please add more content.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.moreContentPromptDescription": {
		"string": "This message is sent when user selects the option to add more content.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.moreContentPromptTitle": {
		"string": "Add more content",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.negativeFeedbackDefault": {
		"string": "Thank you for your feedback. Journalists on our team have been notified and you will receive an update in this thread if a new fact-check is published.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.negativeFeedbackDescription": {
		"string": "If the user is not satisfied, this message informs the user that the content has been sent to journalists.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.negativeFeedbackTitle": {
		"string": "Negative feedback",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.newsletterDefault": {
		"string": "Subscribe now to get the most important facts delivered directly on WhatsApp, every week. {subscription_status}.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.newsletterDescription": {
		"string": "This message informs user about their subscription status. You must keep the placeholders as is (do not translate content within brackets).",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.newsletterTitle": {
		"string": "Newsletter opt-in and opt-out",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.noSearchResultDefault": {
		"string": "No fact-checks have been found. Journalists on our team have been notified and you will receive an update in this thread if the information is fact-checked.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.noSearchResultDescription": {
		"string": "If the bot doesn't find any relevant fact-checks in your database, it informs users that the content has been sent to journalists.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.noSearchResultTitle": {
		"string": "No search result",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.noticeOfInactivityDefault": {
		"string": "Our bot is currently inactive. Please visit *insert URL* to read the latest fact-checks.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.noticeOfInactivityDescription": {
		"string": "This message is sent to any user that has sent a message to the tipline when the Check Message bot is set to inactive.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.noticeOfInactivityTitle": {
		"string": "Notice of inactivity",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.optionNotAvailableDefault": {
		"string": "I'm sorry, I didn't understand your message.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.optionNotAvailableDescription": {
		"string": "The message sent if the user response to a menu is not a valid menu scenario.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.optionNotAvailableTitle": {
		"string": "Option not available",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.placeholder": {
		"string": "Type custom content or translation here.",
		"developer_comment": "Placeholder used in all fields under tipline content and translation settings."
	},
	"smoochBotContentAndTranslation.positiveFeedbackDefault": {
		"string": "Thank you! Spread the word about this tipline to help us fight misinformation! *insert_entry_point_link*",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.positiveFeedbackDescription": {
		"string": "If the user is satisfied, this message's purpose is to thank them for their feedback.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.positiveFeedbackTitle": {
		"string": "Positive feedback",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionCanceledDefault": {
		"string": "OK! Your submission is canceled.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionCanceledDescription": {
		"string": "This message is sent when user cancels the submission of content.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionCanceledTitle": {
		"string": "Submission canceled",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionPromptDefault": {
		"string": "Please enter the question, link, picture, or video that you want to be fact-checked.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionPromptDescription": {
		"string": "The message asking the user to submit content for a fact-check.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionPromptTitle": {
		"string": "Submission prompt",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionReceivedDefault": {
		"string": "Thank you! Looking for fact-checks, it may take a minute.",
		"developer_comment": "Default value for a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionReceivedDescription": {
		"string": "The confirmation sent to the user after a valid query from the user has been received, while the bot is retrieving content.",
		"developer_comment": "Description of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.submissionReceivedTitle": {
		"string": "Submission received",
		"developer_comment": "Title of a customizable string of the tipline bot."
	},
	"smoochBotContentAndTranslation.subtitle": {
		"string": "Replace or translate the default content for each standard bot message.",
		"developer_comment": "Subtitle displayed in tipline settings page for content and translation."
	},
	"smoochBotIntegrationButton.cancel": {
		"string": "Cancel"
	},
	"smoochBotIntegrationButton.confirm": {
		"string": "Confirm"
	},
	"smoochBotIntegrationButton.confirmDisconnectText": {
		"string": "Disconnecting this {platform} account will prevent any user to interact with the tipline through that account.",
		"developer_comment": "Explanation displayed on the confirmation modal when a tipline administrator wants to disconnect a platform (Twitter, Facebook, etc.)."
	},
	"smoochBotIntegrationButton.confirmDisconnectTextPermanent": {
		"string": "Warning! Disconnecting a WhatsApp number is permanent. You will not be able to reconnect it after it is disconnected.",
		"developer_comment": "Explanation displayed on the confirmation modal when a tipline administrator wants to disconnect a WhatsApp number."
	},
	"smoochBotIntegrationButton.confirmDisconnectTitle": {
		"string": "Disconnect {platform} tipline",
		"developer_comment": "Title of the confirmation modal displayed when a tipline administrator wants to disconnect some specific platform (Twitter, Facebook, etc.)."
	},
	"smoochBotIntegrationButton.confirmationMessage": {
		"string": "Disconnect {platform}",
		"developer_comment": "The word *Disconnect* here is an imperative verb... this is what the user needs to type in a field in order to confirm the disconnection of a platform (Twitter, Facebook, etc.) from the tipline."
	},
	"smoochBotIntegrationButton.confirmationMessagePermanent": {
		"string": "Disconnect {platform} permanently",
		"developer_comment": "The word *Disconnect* here is an imperative verb... this is what the user needs to type in a field in order to confirm the disconnection of a platform (Twitter, Facebook, etc.) from the tipline."
	},
	"smoochBotIntegrationButton.connect": {
		"string": "Connect"
	},
	"smoochBotIntegrationButton.connectTipline": {
		"string": "Connect to {platform} tipline"
	},
	"smoochBotIntegrationButton.defaultErrorMessage": {
		"string": "Something went wrong"
	},
	"smoochBotIntegrationButton.disclaimer": {
		"string": "We don't store this information. This is just used to configure the integration."
	},
	"smoochBotIntegrationButton.disclaimerForUrl": {
		"string": "Before proceeding, make sure that you are logged in the {platform} account you wish to connect to the tipline.",
		"developer_comment": "The platform here can be Twitter, Facebook, etc."
	},
	"smoochBotIntegrationButton.disconnect": {
		"string": "Disconnect from this account"
	},
	"smoochBotIntegrationButton.online": {
		"string": "Online"
	},
	"smoochBotIntegrationButton.readyToConnect": {
		"string": "I'm ready to connect"
	},
	"smoochBotIntegrationButton.savedSuccessfully": {
		"string": "Done"
	},
	"smoochBotIntegrationButton.status": {
		"string": "Status: Online"
	},
	"smoochBotIntegrationButton.tipline": {
		"string": "{platform} tipline"
	},
	"smoochBotIntegrations.account": {
		"string": "Connected account: {link}"
	},
	"smoochBotIntegrations.copied": {
		"string": "Copied",
		"developer_comment": "Tooltip displayed on tipline settings when a code is copied to clipboard"
	},
	"smoochBotIntegrations.entryPointDescription": {
		"string": "Use this address anywhere online to open WhatsApp and start a tipline conversation:",
		"developer_comment": "Description displayed on WhatsApp tipline settings window, regarding the entry point for WhatsApp"
	},
	"smoochBotIntegrations.entryPointTitle": {
		"string": "Entry point",
		"developer_comment": "Title displayed on WhatsApp tipline settings window, regarding the entry point for WhatsApp"
	},
	"smoochBotIntegrations.lineChannelAccessToken": {
		"string": "LINE channel access token"
	},
	"smoochBotIntegrations.lineChannelSecret": {
		"string": "LINE channel secret"
	},
	"smoochBotIntegrations.lineWebhook": {
		"string": "Copy this webhook URL to your LINE settings"
	},
	"smoochBotIntegrations.page": {
		"string": "Connected page: {link}"
	},
	"smoochBotIntegrations.phoneNumber": {
		"string": "Connected phone number: {link}"
	},
	"smoochBotIntegrations.qrCodeDescription": {
		"string": "Use this code or download the image to display the QR code on online or offline promotion. Scanning the QR code opens WhatsApp and starts a tipline conversation.",
		"developer_comment": "Description displayed on WhatsApp tipline settings window, regarding the QR code for WhatsApp"
	},
	"smoochBotIntegrations.qrCodeTitle": {
		"string": "QR code",
		"developer_comment": "Title displayed on WhatsApp tipline settings window, regarding the QR code for WhatsApp"
	},
	"smoochBotIntegrations.telegramBot": {
		"string": "Connected Telegram bot: {link}"
	},
	"smoochBotIntegrations.telegramBotToken": {
		"string": "Telegram bot token"
	},
	"smoochBotIntegrations.title": {
		"string": "Messaging services",
		"developer_comment": "Title of Settings tab in the tipline settings page"
	},
	"smoochBotIntegrations.viberPublicAccount": {
		"string": "Connected Viber public account: {name}"
	},
	"smoochBotIntegrations.viberPublicAccountToken": {
		"string": "Viber public account token"
	},
	"smoochBotMainMenu.languagesAndPrivacy": {
		"string": "Languages and Privacy",
		"developer_comment": "Title of the main menu third section of the tipline where there is more than one supported language"
	},
	"smoochBotMainMenu.learnMore": {
		"string": "Learn more",
		"developer_comment": "Link with help article about which menu features are supported by each platform in tipline settings page for the main menu."
	},
	"smoochBotMainMenu.mainMenu": {
		"string": "Main menu",
		"developer_comment": "Title of the tipline bot main menu settings page."
	},
	"smoochBotMainMenu.privacy": {
		"string": "Privacy",
		"developer_comment": "Title of the main menu third section of the tipline when there is only one supported language"
	},
	"smoochBotMainMenu.privacyStatement": {
		"string": "Privacy statement",
		"developer_comment": "Menu label used in the tipline bot"
	},
	"smoochBotMainMenu.subtitle": {
		"string": "The menu of your bot, asking the user to choose between a set of options.",
		"developer_comment": "Subtitle displayed in tipline settings page for the main menu."
	},
	"smoochBotMainMenu.subtitle2": {
		"string": "Please note that some messaging services may have different menu display options than others. {linkToLearnMore}.",
		"developer_comment": "Subtitle displayed in tipline settings page for the main menu if the tipline is enabled for WhatsApp and at least one more platform."
	},
	"smoochBotMainMenuNewOption.cancel": {
		"string": "Cancel",
		"developer_comment": "Button label to cancel adding a new tipline menu option"
	},
	"smoochBotMainMenuNewOption.label": {
		"string": "Button text - 24 characters limit",
		"developer_comment": "Text field label on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuNewOption.main": {
		"string": "Main",
		"developer_comment": "List subheader displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuNewOption.queryState": {
		"string": "Query prompt",
		"developer_comment": "Menu option displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuNewOption.resources": {
		"string": "Resources",
		"developer_comment": "List subheader displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuNewOption.response": {
		"string": "Response",
		"developer_comment": "Input label displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuNewOption.save": {
		"string": "Save",
		"developer_comment": "Button label to save new tipline menu option"
	},
	"smoochBotMainMenuNewOption.scenario": {
		"string": "Scenario",
		"developer_comment": "Title of dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuNewOption.selectAction": {
		"string": "Select action",
		"developer_comment": "Input label displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuNewOption.send": {
		"string": "If the button is clicked, then send:",
		"developer_comment": "Disclaimer displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuNewOption.subscriptionState": {
		"string": "Subscription opt-in",
		"developer_comment": "Menu option displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.cancel": {
		"string": "Cancel",
		"developer_comment": "Button label to cancel adding a new tipline menu option"
	},
	"smoochBotMainMenuOption.description": {
		"string": "Description - 72 characters limit",
		"developer_comment": "Description field label on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.label": {
		"string": "Button text - 24 characters limit",
		"developer_comment": "Text field label on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.main": {
		"string": "Main",
		"developer_comment": "List subheader displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.queryState": {
		"string": "Submission prompt",
		"developer_comment": "Menu option displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.resources": {
		"string": "Resources",
		"developer_comment": "List subheader displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.response": {
		"string": "Response",
		"developer_comment": "Input label displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.save": {
		"string": "Save",
		"developer_comment": "Button label to save new tipline menu option"
	},
	"smoochBotMainMenuOption.scenario": {
		"string": "Scenario",
		"developer_comment": "Title of dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.selectAction": {
		"string": "Select action",
		"developer_comment": "Input label displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.send": {
		"string": "If the button is clicked, then send:",
		"developer_comment": "Disclaimer displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuOption.subscriptionState": {
		"string": "Subscription opt-in",
		"developer_comment": "Menu option displayed on dialog that opens to add a new option to tipline bot main menu"
	},
	"smoochBotMainMenuSection.defaultSectionTitle": {
		"string": "Menu options",
		"developer_comment": "Default label for a main menu section title field on tipline bot settings."
	},
	"smoochBotMainMenuSection.editOption": {
		"string": "Edit",
		"developer_comment": "Button label to edit a main menu option on tipline bot settings."
	},
	"smoochBotMainMenuSection.newOption": {
		"string": "New option",
		"developer_comment": "Button label to create a new main menu option on tipline bot settings."
	},
	"smoochBotMainMenuSection.noOptions": {
		"string": "There is currently no option in this section.",
		"developer_comment": "Message displayed when there is no menu option on tipline bot settings."
	},
	"smoochBotMainMenuSection.optionNoDescription": {
		"string": "no description",
		"developer_comment": "Displayed when a tipline bot menu option doesn't have a description."
	},
	"smoochBotMainMenuSection.sectionTitle": {
		"string": "Title - 24 characters limit",
		"developer_comment": "Label for a main menu section title field on tipline bot settings."
	},
	"smoochBotMenuEditor.scenario": {
		"string": "Scenario"
	},
	"smoochBotMenuOption.action": {
		"string": "Respond with"
	},
	"smoochBotMenuOption.add": {
		"string": "Create \"{resourceName}\""
	},
	"smoochBotMenuOption.condition": {
		"string": "The following keyword is matched"
	},
	"smoochBotMenuOption.errorTos": {
		"string": "'9' will redirect to the terms of service. It cannot be used as an option in the main menu."
	},
	"smoochBotMenuOption.if": {
		"string": "If"
	},
	"smoochBotMenuOption.languageAction": {
		"string": "{languageName} (main menu)"
	},
	"smoochBotMenuOption.mainState": {
		"string": "Main menu"
	},
	"smoochBotMenuOption.queryState": {
		"string": "Query prompt"
	},
	"smoochBotMenuOption.resource": {
		"string": "Report"
	},
	"smoochBotMenuOption.secondaryState": {
		"string": "Secondary menu"
	},
	"smoochBotMenuOption.selectMessage": {
		"string": "Select message"
	},
	"smoochBotMenuOption.subscription": {
		"string": "Subscription opt-in"
	},
	"smoochBotMenuOption.subscriptionConfirmation": {
		"string": "Subscription confirmation"
	},
	"smoochBotMenuOption.then": {
		"string": "Then"
	},
	"smoochBotMultiTextEditor.errorNine": {
		"string": "The option '9' must be included for users to access the Privacy Statement"
	},
	"smoochBotNewsletterAt": {
		"string": "at",
		"developer_comment": "The context here is a time... for example, at 10am"
	},
	"smoochBotNewsletterEditor.active": {
		"string": "The newsletter will be sent to {count} users on {dateTime}"
	},
	"smoochBotNewsletterEditor.addArticle": {
		"string": "Add article",
		"developer_comment": "Button label to add a new article URL to the tipline newsletter content"
	},
	"smoochBotNewsletterEditor.charsCounter": {
		"string": "{count}/{max} characters available",
		"developer_comment": "Counter that shows how many characters can still be input for the tipline content"
	},
	"smoochBotNewsletterEditor.day": {
		"string": "Day of week"
	},
	"smoochBotNewsletterEditor.error": {
		"string": "This URL does not seem to be a valid RSS feed"
	},
	"smoochBotNewsletterEditor.everyday": {
		"string": "Day"
	},
	"smoochBotNewsletterEditor.firstStepDescription": {
		"string": "Send the newsletter to all subscribed user every:",
		"developer_comment": "Explanation about tipline newsletter schedule... after that, there is a drop-down where the user can choose periodicity, day of week and time"
	},
	"smoochBotNewsletterEditor.firstStepTitle": {
		"string": "Schedule",
		"developer_comment": "Tipline newsletter schedule (how often it should be sent)"
	},
	"smoochBotNewsletterEditor.friday": {
		"string": "Friday"
	},
	"smoochBotNewsletterEditor.introPlaceholder1": {
		"string": "Use the placeholder {channel} to insert the name of the messaging service automatically.",
		"developer_comment": "Explanation about a placeholder that can be used in the tipline newsletter introduction, so {channel} here must not be translated."
	},
	"smoochBotNewsletterEditor.introPlaceholder2": {
		"string": "Use the placeholder {date} to insert the date the newsletter is sent automatically.",
		"developer_comment": "Explanation about a placeholder that can be used in the tipline newsletter introduction, so {date} here must not be translated."
	},
	"smoochBotNewsletterEditor.introduction": {
		"string": "Introduction",
		"developer_comment": "Tipline newsletter introduction field label"
	},
	"smoochBotNewsletterEditor.load": {
		"string": "Load"
	},
	"smoochBotNewsletterEditor.monday": {
		"string": "Monday"
	},
	"smoochBotNewsletterEditor.none": {
		"string": "Please complete the steps below to send a weekly newsletter"
	},
	"smoochBotNewsletterEditor.numberOfArticles": {
		"string": "Number of articles to return"
	},
	"smoochBotNewsletterEditor.paused": {
		"string": "To send your next newsletter, please add new content"
	},
	"smoochBotNewsletterEditor.rssPlaceholder": {
		"string": "Public URL that returns N articles in RSS format"
	},
	"smoochBotNewsletterEditor.saturday": {
		"string": "Saturday"
	},
	"smoochBotNewsletterEditor.secondStep": {
		"string": "Content",
		"developer_comment": "Refers to tipline newsletter content"
	},
	"smoochBotNewsletterEditor.secondStep2": {
		"string": "If the content is not changed between two scheduled sendouts, the newsletter will not be sent.",
		"developer_comment": "Explanation about tipline newsletter delivery, in tipline newsletter settings page"
	},
	"smoochBotNewsletterEditor.sunday": {
		"string": "Sunday"
	},
	"smoochBotNewsletterEditor.thursday": {
		"string": "Thursday"
	},
	"smoochBotNewsletterEditor.time": {
		"string": "Time"
	},
	"smoochBotNewsletterEditor.timezone": {
		"string": "Time zone",
		"developer_comment": "Label for time zone selection"
	},
	"smoochBotNewsletterEditor.toggleRss": {
		"string": "Load content from RSS feed"
	},
	"smoochBotNewsletterEditor.tuesday": {
		"string": "Tuesday"
	},
	"smoochBotNewsletterEditor.url": {
		"string": "URL"
	},
	"smoochBotNewsletterEditor.wednesday": {
		"string": "Wednesday"
	},
	"smoochBotResourceEditor.addContent": {
		"string": "Type something",
		"developer_comment": "Placeholder for manual content entry"
	},
	"smoochBotResourceEditor.charsCounter": {
		"string": "{count}/{max} characters available",
		"developer_comment": "Counter that shows how many characters can still be input for the tipline content"
	},
	"smoochBotResourceEditor.content": {
		"string": "Content",
		"developer_comment": "Header for the bot resource's content textfield"
	},
	"smoochBotResourceEditor.delete": {
		"string": "Delete resource"
	},
	"smoochBotResourceEditor.error": {
		"string": "This URL does not seem to be a valid RSS feed"
	},
	"smoochBotResourceEditor.load": {
		"string": "Load"
	},
	"smoochBotResourceEditor.numberOfArticles": {
		"string": "Number of articles to return"
	},
	"smoochBotResourceEditor.rss": {
		"string": "Load content from RSS feed",
		"developer_comment": "Label of switch that toggles loading of content from a RSS feed"
	},
	"smoochBotResourceEditor.rssPlaceholder": {
		"string": "Public URL that returns N articles in RSS format"
	},
	"smoochBotResourceEditor.title": {
		"string": "Bot resource title"
	},
	"smoochBotResourceEditor.url": {
		"string": "URL"
	},
	"smoochBotSettings.bspSettings": {
		"string": "WhatsApp BSP settings",
		"developer_comment": "Title of 'WhatsApp BSP' settings section in the tipline settings page. The words WhatsApp BSP do not need to be translated."
	},
	"smoochBotSettings.internalSettings": {
		"string": "Internal settings",
		"developer_comment": "Title of Internal Settings section in the tipline settings page"
	},
	"smoochBotSettings.internalSettingsDescription": {
		"string": "Meedan employees see these settings, but users don't.",
		"developer_comment": "Description of Internal Settings section in the tipline settings page. The word Meedan does not need to be translated."
	},
	"smoochBotSettings.searchSettings": {
		"string": "Search settings",
		"developer_comment": "Title of Search settings section in the tipline settings page."
	},
	"smoochBotSettings.sunshineSettings": {
		"string": "Sunshine integration settings",
		"developer_comment": "Title of Sunshine settings section in the tipline settings page. The word Sunshine does not need to be translated."
	},
	"smoochBotSettings.templatesSettings": {
		"string": "Templates settings",
		"developer_comment": "Title of templates settings section in the tipline settings page."
	},
	"sortSelect.az": {
		"string": "A to Z"
	},
	"sortSelect.lu": {
		"string": "Least used"
	},
	"sortSelect.mu": {
		"string": "Most used"
	},
	"sortSelect.nf": {
		"string": "Newest first"
	},
	"sortSelect.of": {
		"string": "Oldest first"
	},
	"sortSelect.za": {
		"string": "Z to A"
	},
	"sourceInfo.addLink": {
		"string": "Add a secondary URL",
		"developer_comment": "Allow user to relate a new link to media source"
	},
	"sourceInfo.addSecondaryLink": {
		"string": "Add a secondary URL",
		"developer_comment": "Label for add a new source secondary URL"
	},
	"sourceInfo.createNew": {
		"string": "Create new",
		"developer_comment": "Create a new media source label"
	},
	"sourceInfo.invalidLink": {
		"string": "Please enter a valid URL",
		"developer_comment": "Error message for invalid link"
	},
	"sourceInfo.mainAccount": {
		"string": "Main source URL",
		"developer_comment": "URL for first account related to media souce"
	},
	"sourceInfo.mainName": {
		"string": "Main name",
		"developer_comment": "Source name"
	},
	"sourceInfo.mediasCount": {
		"string": "{mediasCount, plural, one {1 item} other {# items}}",
		"developer_comment": "show source media counts"
	},
	"sourceInfo.primaryLink": {
		"string": "Add main source URL",
		"developer_comment": "Allow user to add a main source URL"
	},
	"sourceInfo.saved": {
		"string": "Saved {ago}"
	},
	"sourceInfo.saving": {
		"string": "Saving…"
	},
	"sourceInfo.secondaryAccounts": {
		"string": "Secondary source URLs",
		"developer_comment": "URLs for source accounts except first account"
	},
	"sourceInfo.sourceName": {
		"string": "Add name",
		"developer_comment": "label for create source name"
	},
	"spam.title": {
		"string": "Spam",
		"developer_comment": "Spam, as in junk, unsolicited content"
	},
	"statusListItem.confirmDefaultBody1": {
		"string": "This will change the default language from {currentDefaultLanguage} to {newDefaultLanguage}."
	},
	"statusListItem.confirmDefaultBody2": {
		"string": "{language} will become the default language to respond to users in the Tipline bot, Status or Report if they interact with the bot in any language not on this list, or if there is not a translation available for that language."
	},
	"statusListItem.confirmDefaultButton": {
		"string": "Set {language} as default"
	},
	"statusListItem.confirmDefaultTitle": {
		"string": "Do you want to set the default language to {language}?"
	},
	"statusListItem.confirmDeleteBody1": {
		"string": "All content in {language} for the 'Tipline', 'Statuses' and 'Report' tabs will be deleted permanently.",
		"developer_comment": "Warning about content being lost after deleting a language"
	},
	"statusListItem.confirmDeleteBody2": {
		"string": "Users will receive this content in the default language {language} instead."
	},
	"statusListItem.confirmDeleteDefaultBody": {
		"string": "You cannot delete the default language. You must set a different default language before you can delete {language}.",
		"developer_comment": "Message warning user to set a new default language before deleting the current one"
	},
	"statusListItem.confirmDeleteDefaultLabel": {
		"string": "Go back and change"
	},
	"statusListItem.confirmDeleteDefaultTitle": {
		"string": "You must first change the default language"
	},
	"statusListItem.confirmDeleteLabel": {
		"string": "Delete language and all content"
	},
	"statusListItem.confirmDeleteTitle": {
		"string": "Do you want to delete this content language?"
	},
	"statusListItem.default": {
		"string": "{statusLabel} (default)"
	},
	"statusListItem.makeDefault": {
		"string": "Make default"
	},
	"statusListItem.noDescription": {
		"string": "No description"
	},
	"statusListItem.translationNeededBody1": {
		"string": "Not all statuses are currently translated into {language}!"
	},
	"statusListItem.translationNeededBody2": {
		"string": "Before you can make {language} the default language you must first translate all existing statuses into {language} in the Statuses settings tab."
	},
	"statusListItem.translationNeededLabel": {
		"string": "Go back and translate statuses"
	},
	"statusListItem.translationNeededTitle": {
		"string": "You need to translate all statuses into {language}"
	},
	"statusesComponent.blurbSecondary": {
		"string": "Translate statuses in secondary languages in order to display them in local languages in your fact checking reports.",
		"developer_comment": "Message displayed on status translation page."
	},
	"statusesComponent.created": {
		"string": "Status created successfully",
		"developer_comment": "Success message displayed when status is created."
	},
	"statusesComponent.deleteButton": {
		"string": "Delete status",
		"developer_comment": "Button label to delete status"
	},
	"statusesComponent.deleted": {
		"string": "Status deleted successfully",
		"developer_comment": "Success message displayed when status is deleted."
	},
	"statusesComponent.error": {
		"string": "Sorry, an error occurred while updating the statuses. Please try again and contact {supportEmail} if the condition persists.",
		"developer_comment": "Error message displayed when status can't be changed."
	},
	"statusesComponent.moveItemsAndDelete": {
		"string": "Move items and delete status",
		"developer_comment": "Label of a button that is displayed when a status in use is being deleted."
	},
	"statusesComponent.newStatus": {
		"string": "New status",
		"developer_comment": "Button label to create a new status."
	},
	"statusesComponent.saved": {
		"string": "Statuses saved successfully",
		"developer_comment": "Success message displayed when status is saved."
	},
	"statusesComponent.title": {
		"string": "{languageName} statuses",
		"developer_comment": "The idea of this sentence is 'statuses written in language <languageName>'"
	},
	"suggestedMatches.title": {
		"string": "Suggested matches"
	},
	"switchTeams.cancelJoinRequest": {
		"string": "Cancel"
	},
	"switchTeams.error": {
		"string": "Sorry, an error occurred while updating the workspace. Please try again and contact {supportEmail} if the condition persists."
	},
	"switchTeams.joinRequestMessage": {
		"string": "You requested to join"
	},
	"switchTeams.member": {
		"string": "{membersCount, plural, one {# member} other {# members}}"
	},
	"switchTeams.newTeamLink": {
		"string": "Create"
	},
	"switchTeams.noTeams": {
		"string": "Not a member of any workspace."
	},
	"tagInput.addTag": {
		"string": "Add Tag"
	},
	"tagInput.error": {
		"string": "Sorry, an error occurred while updating the tag. Please try again and contact {supportEmail} if the condition persists."
	},
	"tagInput.search": {
		"string": "Search or add new tag"
	},
	"tagMenu.create": {
		"string": "+ Create this tag"
	},
	"tagMenu.notFound": {
		"string": "No tags found"
	},
	"tagMenu.search": {
		"string": "Search…"
	},
	"tagMenu.submit": {
		"string": "ടാഗ്",
		"developer_comment": "Verb, infinitive form. Button to commit action of tagging an item"
	},
	"tagMenu.tooltip": {
		"string": "Edit tags"
	},
	"tagPicker.emptyTags": {
		"string": "There are currently no tags for this workspace."
	},
	"tagPicker.tagNotFound": {
		"string": "Tag #{tag} not found."
	},
	"task.assignOrUnassign": {
		"string": "Assign/Unassign"
	},
	"task.delete": {
		"string": "Delete task"
	},
	"task.deleteResponse": {
		"string": "Delete answer"
	},
	"task.edit": {
		"string": "Edit task"
	},
	"task.editAttribution": {
		"string": "Edit attribution"
	},
	"task.editResponse": {
		"string": "Edit answer"
	},
	"task.uploadWarningBody": {
		"string": "Navigating away from this page may cause the interruption of the file upload.",
		"developer_comment": "Warning to prevent user from navigating away while upload is running"
	},
	"task.uploadWarningTitle": {
		"string": "There is an ongoing file upload",
		"developer_comment": "Warning to prevent user from navigating away while upload is running"
	},
	"taskActions.tooltipMetadata": {
		"string": "Metadata actions"
	},
	"taskActions.tooltipTask": {
		"string": "Task actions"
	},
	"taskLog.bubbleTooltip": {
		"string": "Toggle log"
	},
	"taskTypeSelector.allTypes": {
		"string": "All tasks"
	},
	"taskTypeSelector.numTypes": {
		"string": "{length, plural, one {# selected} other {# selected}}",
		"developer_comment": "Label for number of selected tasks"
	},
	"tasks.UrlDescription": {
		"string": "Must be a valid URL",
		"developer_comment": "Hint text about what kind of text a user can put in the URL box"
	},
	"tasks.UrlType": {
		"string": "URL",
		"developer_comment": "Label for the URL type field"
	},
	"tasks.add": {
		"string": "Save"
	},
	"tasks.addMetadata": {
		"string": "New metadata"
	},
	"tasks.addTask": {
		"string": "New task"
	},
	"tasks.answer": {
		"string": "Answer Task"
	},
	"tasks.assign": {
		"string": "Assign"
	},
	"tasks.blankAnnotation": {
		"string": "No annotation fields",
		"developer_comment": "A message that appears when the Annotation menu is opened but no Annotation fields have been created in the project settings."
	},
	"tasks.cancelAdd": {
		"string": "Cancel"
	},
	"tasks.cancelEdit": {
		"string": "Cancel"
	},
	"tasks.cantChangeTypeMessage": {
		"string": "The field type cannot be changed because answers have already been filled",
		"developer_comment": "Message when team task has answers and type cannot be updated"
	},
	"tasks.chooseMultiple": {
		"string": "Multiple select"
	},
	"tasks.chooseOne": {
		"string": "Single select"
	},
	"tasks.chooseType": {
		"string": "Choose a field type",
		"developer_comment": "Label for field type selection box"
	},
	"tasks.confirmLeave": {
		"string": "You are currently editing annotations. Do you wish to continue to a new page? Your work will not be saved.",
		"developer_comment": "This is a prompt that appears when a user tries to exit a page before saving their work."
	},
	"tasks.confirmLeaveTitle": {
		"string": "Do you want to leave without saving?",
		"developer_comment": "This is a prompt that appears when a user tries to exit a page before saving their work."
	},
	"tasks.dateTimeType": {
		"string": "Date",
		"developer_comment": "Label for date type field"
	},
	"tasks.datetime": {
		"string": "Date and time"
	},
	"tasks.datetimeDescription": {
		"string": "Allows you to pick a date from the calendar",
		"developer_comment": "Description for date type field"
	},
	"tasks.description": {
		"string": "Description (optional)"
	},
	"tasks.fileUpload": {
		"string": "File upload"
	},
	"tasks.fileUploadDescription": {
		"string": "Allows you to upload a file",
		"developer_comment": "Description for file upload type field"
	},
	"tasks.fileUploadType": {
		"string": "File upload",
		"developer_comment": "Label for file upload type field"
	},
	"tasks.geolocation": {
		"string": "Location"
	},
	"tasks.goToSettings": {
		"string": "Go to settings"
	},
	"tasks.locationDescription": {
		"string": "Allows you to add coordinates of a place, or search a place by name",
		"developer_comment": "Description for location type field"
	},
	"tasks.locationType": {
		"string": "Location",
		"developer_comment": "Label for location type field"
	},
	"tasks.multipleChoiceDescription": {
		"string": "Allows you to select one or more predefined options",
		"developer_comment": "Description for multiple selection type field"
	},
	"tasks.multipleChoiceType": {
		"string": "Multiple select",
		"developer_comment": "Label for multiple selection type field"
	},
	"tasks.number": {
		"string": "Number",
		"developer_comment": "Label for a task type that requires a numeric value as answer"
	},
	"tasks.numberDescription": {
		"string": "Allows you to enter a number",
		"developer_comment": "Description for number type field"
	},
	"tasks.numberType": {
		"string": "Number",
		"developer_comment": "Label for number type field"
	},
	"tasks.shortAnswer": {
		"string": "Text"
	},
	"tasks.shortTextDescription": {
		"string": "Allows you to enter text",
		"developer_comment": "Description for text type field"
	},
	"tasks.showIfCondition": {
		"string": "Show field when condition is met",
		"developer_comment": "This is a switch that, when set to 'on', will cause the field above the switch to only be shown when a certain user-defined condition is true. Selecting this button creates a dialog for the user to define the condition."
	},
	"tasks.singleChoiceDescription": {
		"string": "Allows you to select a single option from predefined options in a list",
		"developer_comment": "Description for single selection type field"
	},
	"tasks.singleChoiceType": {
		"string": "Single select",
		"developer_comment": "Label for single selection type field"
	},
	"tasks.taskPrompt": {
		"string": "Title",
		"developer_comment": "Title field for custom annotation field"
	},
	"tasks.teamwideNudge": {
		"string": "Default tasks"
	},
	"tasks.textType": {
		"string": "Text",
		"developer_comment": "Label for text type field"
	},
	"tasks.timezones": {
		"string": "Timezones available to complete the task"
	},
	"tasks.when": {
		"string": "When",
		"developer_comment": "We have a form that says in English, 'When [selected field] [is / is not] [user-selected value]'. Where the parts between brackets are interactive drop-downs. The word for this field should indicate that the following user-selected conditions hold true."
	},
	"teamBots.fail": {
		"string": "Error! Please try again."
	},
	"teamBots.noSettings": {
		"string": "There are no settings for this bot."
	},
	"teamBots.save": {
		"string": "Save"
	},
	"teamBots.settings": {
		"string": "Settings"
	},
	"teamBots.success": {
		"string": "Settings updated!"
	},
	"teamDataComponent.averageMessagesPerDay": {
		"string": "Average messages per day sent back and forth between users and the bot.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.claimsAnsweredWithAReport": {
		"string": "For example, if two users requested the same claim and received the same report, it counts as one.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.conversations": {
		"string": "Starts when a user interacts with the bot and ends after 15 minutes of inactivity.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.currentSubscribers": {
		"string": "Current number of newsletter subscriptions.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.download": {
		"string": "Download CSV",
		"developer_comment": "Label for action button displayed on workspace data report page."
	},
	"teamDataComponent.formLinkText": {
		"string": "this short form"
	},
	"teamDataComponent.newNewsletterSubscriptions": {
		"string": "New newsletter subscriptions.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.newsletterCancellations": {
		"string": "New newsletter cancellations.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.publishedImportedReports": {
		"string": "Published reports imported from web sites (for all languages and platforms).",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.publishedNativeReports": {
		"string": "Published reports created in Check (for all languages and platforms).",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.reportsSent": {
		"string": "Reports sent in response to requests. For example, if two users requested the same claim and received the same report, it counts as two.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.responseTime": {
		"string": "Average time between a user request and a report sent.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.returningUsers": {
		"string": "Unique users who had at least one session in the current month, and at least one session in the last previous two months.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.set1": {
		"string": "Fill {thisShortForm} to request access to your data report."
	},
	"teamDataComponent.set2": {
		"string": "Your data report will be enabled within one business day."
	},
	"teamDataComponent.title": {
		"string": "Tipline engagement data",
		"developer_comment": "Header for the stored data page of the current team"
	},
	"teamDataComponent.uniqueNewslettersSent": {
		"string": "Unique newsletters sent, for all platforms. This information started to be collected in June 1st, 2022.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.uniqueUsers": {
		"string": "Unique users who interacted with the bot.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.uniqueUsersWhoReceivedReport": {
		"string": "Unique users who received a report. For example, if one user received three reports, it counts as one.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDataComponent.validNewRequests": {
		"string": "User requests associated with claims that are not in the trash.",
		"developer_comment": "Explanation on table header, when hovering the \"help\" icon, on data settings page"
	},
	"teamDetails.description": {
		"string": "Description"
	},
	"teamDetails.duplicateWorkspace": {
		"string": "Duplicate workspace"
	},
	"teamDetails.savedSuccessfully": {
		"string": "Workspace details saved successfully"
	},
	"teamDetails.subtitle": {
		"string": "Add details to your Check workspace.",
		"developer_comment": "Subtitle for details page of current workspace"
	},
	"teamDetails.title": {
		"string": "Workspace details",
		"developer_comment": "Title for details page of current workspace"
	},
	"teamDetails.update": {
		"string": "Update"
	},
	"teamDetails.workspaceName": {
		"string": "Workspace name"
	},
	"teamIntegrations.subtitle": {
		"string": "Third party tools to enhance productivity."
	},
	"teamIntegrations.title": {
		"string": "Integrations"
	},
	"teamListsColumn.none": {
		"string": "None available",
		"developer_comment": "Placeholder text when there are no columns left for selection when the user is customizing which ones they want to show or hide"
	},
	"teamListsComponent.buttonLabel": {
		"string": "Save changes"
	},
	"teamListsComponent.confirmSaveText": {
		"string": "Are you sure? Your changes will affect all folders, collections and lists and be visible by all users in your workspace."
	},
	"teamListsComponent.confirmSaveTitle": {
		"string": "Workspace columns change"
	},
	"teamListsComponent.createMetadata": {
		"string": "Create new metadata field"
	},
	"teamListsComponent.defaultErrorMessage": {
		"string": "Could not save column settings",
		"developer_comment": "Warning displayed if an error occurred when saving column settings"
	},
	"teamListsComponent.description": {
		"string": "Select all the columns you want to display in all your folders, collections and lists.",
		"developer_comment": "Subtitle for Column settings page, where users can configure the visibility of columns in folders, collections and lists."
	},
	"teamListsComponent.displayedColumns": {
		"string": "Displayed columns"
	},
	"teamListsComponent.generalColumns": {
		"string": "General"
	},
	"teamListsComponent.metadataColumns": {
		"string": "Annotation"
	},
	"teamListsComponent.savedSuccessfully": {
		"string": "Column settings saved successfully",
		"developer_comment": "Banner displayed when column settings are saved successfully"
	},
	"teamListsComponent.title": {
		"string": "Column settings",
		"developer_comment": "Header for Column settings page, where users can configure the visibility of columns in folders, collections and lists."
	},
	"teamListsItem.general": {
		"string": "General"
	},
	"teamListsItem.hide": {
		"string": "Hide"
	},
	"teamListsItem.metadata": {
		"string": "Annotation"
	},
	"teamListsItem.show": {
		"string": "Show"
	},
	"teamMemberActions.copiedToClipboard": {
		"string": "The email has been copied to the clipboard"
	},
	"teamMemberActions.invitationCanceled": {
		"string": "Invite canceled!",
		"developer_comment": "Success notification confirming that invitation was canceled"
	},
	"teamMemberActions.invitationSent": {
		"string": "Invite sent!",
		"developer_comment": "Success notification confirming that invitation was sent to user"
	},
	"teamMemberActions.userRemoved": {
		"string": "The user has been removed"
	},
	"teamMembers.copyEmail": {
		"string": "Copy email"
	},
	"teamMembers.invite": {
		"string": "Invite"
	},
	"teamMembers.pending": {
		"string": "തീര്‍ന്നിട്ടില്ല",
		"developer_comment": "Label for invite pending acceptance"
	},
	"teamMembers.remove": {
		"string": "Remove"
	},
	"teamMembers.removeDialogBody": {
		"string": "{userLabel} will no longer have access to {teamName}'s workspace, including all content, folders and files."
	},
	"teamMembers.removeDialogTitle": {
		"string": "Remove {userLabel}"
	},
	"teamMembers.resendInvite": {
		"string": "Resend invite"
	},
	"teamMembers.subtitle": {
		"string": "Invite and manage users.",
		"developer_comment": "Subtitle for workspace members management page"
	},
	"teamMembers.tableHeaderLastActive": {
		"string": "Last active",
		"developer_comment": "Column header in members table."
	},
	"teamMembers.tableHeaderName": {
		"string": "പേര്",
		"developer_comment": "Column header in members table."
	},
	"teamMembers.tableHeaderRole": {
		"string": "Workspace permission",
		"developer_comment": "Column header in members table."
	},
	"teamMembers.title": {
		"string": "Members",
		"developer_comment": "Title for workspace members management page"
	},
	"teamMembers.tooltip": {
		"string": "Manage member"
	},
	"teamMenu.teamSettings": {
		"string": "Workspace settings"
	},
	"teamMetadataRender.blankAnnotations": {
		"string": "No annotation fields",
		"developer_comment": "Text for empty annotations"
	},
	"teamMetadataRender.itemTitle": {
		"string": "Item annotation form",
		"developer_comment": "Title for annotation settings screen. Refers to annotation applied to items generally, not any specific item or items."
	},
	"teamMetadataRender.metadataItemSubtitle": {
		"string": "Create dynamic forms to annotate items by adding fields.",
		"developer_comment": "Subtitle for annotation settings screen applied to Items"
	},
	"teamMetadataRender.metadataSourceSubtitle": {
		"string": "Create dynamic forms to annotate sources by adding fields.",
		"developer_comment": "Subtitle for annotation settings screen applied to Sources"
	},
	"teamMetadataRender.sourceTitle": {
		"string": "Source annotation form",
		"developer_comment": "Title for annotation settings screen. Refers to annotation applied to sources generally, not any specific source or sources."
	},
	"teamReportComponent.defaultErrorMessage": {
		"string": "Could not save report settings",
		"developer_comment": "Warning displayed if an error occurred when saving report settings"
	},
	"teamReportComponent.facebook": {
		"string": "Facebook page name"
	},
	"teamReportComponent.introduction": {
		"string": "Introduction"
	},
	"teamReportComponent.introductionSub": {
		"string": "Use {query_date} placeholder to display the date of the original query. Use {status} to communicate the status of the article."
	},
	"teamReportComponent.line": {
		"string": "LINE channel"
	},
	"teamReportComponent.save": {
		"string": "Save"
	},
	"teamReportComponent.savedSuccessfully": {
		"string": "Report settings saved successfully",
		"developer_comment": "Banner displayed when report settings are saved successfully"
	},
	"teamReportComponent.signature": {
		"string": "Signature"
	},
	"teamReportComponent.signatureLabel": {
		"string": "Signature ({max} characters max)",
		"developer_comment": "Label for signature field in report settings"
	},
	"teamReportComponent.telegram": {
		"string": "Telegram bot username"
	},
	"teamReportComponent.title": {
		"string": "Default report settings"
	},
	"teamReportComponent.twitter": {
		"string": "Twitter account name"
	},
	"teamReportComponent.url": {
		"string": "Website URL"
	},
	"teamReportComponent.urlLabel": {
		"string": "Short URL ({max} characters max)",
		"developer_comment": "Label for URL field in report settings"
	},
	"teamReportComponent.viber": {
		"string": "Viber public account URI"
	},
	"teamReportComponent.whatsapp": {
		"string": "WhatsApp number"
	},
	"teamSettings.Tags": {
		"string": "Tags"
	},
	"teamSettings.data": {
		"string": "Data"
	},
	"teamSettings.details": {
		"string": "Workspace details"
	},
	"teamSettings.integrations": {
		"string": "Integrations"
	},
	"teamSettings.languages": {
		"string": "Languages"
	},
	"teamSettings.lists": {
		"string": "Columns"
	},
	"teamSettings.members": {
		"string": "Members"
	},
	"teamSettings.metadata": {
		"string": "Annotation",
		"developer_comment": "Label for annotation settings tab"
	},
	"teamSettings.report": {
		"string": "Report"
	},
	"teamSettings.rules": {
		"string": "Rules"
	},
	"teamSettings.similarity": {
		"string": "Similarity"
	},
	"teamSettings.statuses": {
		"string": "Statuses"
	},
	"teamSettings.tipline": {
		"string": "Tipline"
	},
	"teamTags.addTag": {
		"string": "Add tag"
	},
	"teamTags.confirmDeleteBody": {
		"string": "{numTags, plural, one {The tag \"{tag}\" will be removed from one item.} other {The tag \"{tag}\" will be removed from # items.}}"
	},
	"teamTags.confirmDeleteLabel": {
		"string": "Delete tag"
	},
	"teamTags.confirmDeleteTitle": {
		"string": "Do you want to delete this tag?"
	},
	"teamTags.counter": {
		"string": "{total, plural, =0 {No tags} one {1 tag ({hidden} hidden by filters)} other {# tags ({hidden} hidden by filters)}}"
	},
	"teamTags.counterNoHidden": {
		"string": "{total, plural, =0 {No tags} one {1 tag} other {# tags}}"
	},
	"teamTags.deleteTag": {
		"string": "Delete tag"
	},
	"teamTags.description": {
		"string": "Tags can be added to media, items and sources."
	},
	"teamTags.editTag": {
		"string": "Edit tag"
	},
	"teamTags.fail": {
		"string": "Sorry, an error occurred while updating the tag. Please try again and contact {supportEmail} if the condition persists."
	},
	"teamTags.failDelete": {
		"string": "Sorry, an error occurred while updating the tag. Please try again and contact {supportEmail} if the condition persists."
	},
	"teamTags.failMove": {
		"string": "Sorry, an error occurred while updating the tag. Please try again and contact {supportEmail} if the condition persists."
	},
	"teamTags.failUpdate": {
		"string": "Sorry, an error occurred while updating the tag. Please try again and contact {supportEmail} if the condition persists."
	},
	"teamTags.itemsCount": {
		"string": "{count, plural, =0 {no items} one {1 item} other {# items}}"
	},
	"teamTags.menuTooltip": {
		"string": "Tag actions"
	},
	"teamTags.new": {
		"string": "New tag"
	},
	"teamTags.newTag": {
		"string": "New tag"
	},
	"teamTags.noTags": {
		"string": "No tags"
	},
	"teamTags.title": {
		"string": "Tags"
	},
	"teamTags.tooltip": {
		"string": "Filter and sort folder"
	},
	"teamTagsActions.couldNotDelete": {
		"string": "Could not delete tag",
		"developer_comment": "Error message displayed when it's not possible to delete a team tag"
	},
	"teamTagsActions.delete": {
		"string": "Delete"
	},
	"teamTagsActions.deletedSuccessfully": {
		"string": "Tag deleted successfully",
		"developer_comment": "Message displayed when a team tag is deleted"
	},
	"teamTagsActions.edit": {
		"string": "Edit"
	},
	"teamTagsActions.remove": {
		"string": "Delete tag"
	},
	"teamTagsActions.removeDialogBody": {
		"string": "Tag \"{tag}\" will be removed from {count} items."
	},
	"teamTagsActions.removeDialogTitle": {
		"string": "Delete tag \"{tag}\""
	},
	"teamTagsActions.tooltip": {
		"string": "Manage tag"
	},
	"teamTagsComponent.newTag": {
		"string": "New tag"
	},
	"teamTagsComponent.tableHeaderName": {
		"string": "പേര്",
		"developer_comment": "Column header in tags table."
	},
	"teamTagsComponent.tableHeaderTagsCount": {
		"string": "Items",
		"developer_comment": "Column header in tags table."
	},
	"teamTagsComponent.tableHeaderUpdatedAt": {
		"string": "Updated",
		"developer_comment": "Column header in tags table."
	},
	"teamTagsComponent.title": {
		"string": "Tags",
		"developer_comment": "Title for the tags settings page"
	},
	"teamTaskCard.menu": {
		"string": "Field {number}",
		"developer_comment": "E.g. Field 1, Field 2..."
	},
	"teamTaskCard.required": {
		"string": "Required",
		"developer_comment": "Toggle switch to make field required"
	},
	"teamTaskCard.showInBrowserExtension": {
		"string": "Show in browser extension",
		"developer_comment": "Toggle switch to make field visible in the browser extension"
	},
	"teamTasks.cancelAction": {
		"string": "Cancel"
	},
	"teamTasks.confirmAction": {
		"string": "Yes"
	},
	"teamTasks.confirmDeleteBlurbMetadata": {
		"string": "{itemsNumber, plural, one {The field {fieldLabel} has been completed in # item.} other {The field {fieldLabel} has been completed in # items.}}",
		"developer_comment": "Warning about existing completed instances of a field before performing deletion of it"
	},
	"teamTasks.confirmDeleteMetadataTitle": {
		"string": "Are you sure you want to delete this field?"
	},
	"teamTasks.confirmDeletekeepCompletedMetadata": {
		"string": "Keep this field with answers in items where it has been completed.",
		"developer_comment": "Label to checkbox for choosing whether completed fields should be deleted or not"
	},
	"teamTasks.confirmEditBlurbMetadata": {
		"string": "Related item fields will be modified as a consequence of applying this change, except for those that have already been completed.",
		"developer_comment": "Warning about existing instances of a field before performing changes to it"
	},
	"teamTasks.confirmEditMetadataTitle": {
		"string": "Are you sure you want to edit this field?"
	},
	"teamTasks.confirmEditkeepCompletedMetadata": {
		"string": "Do not alter fields that have been completed, and keep their existing answers.",
		"developer_comment": "Label to checkbox for choosing whether completed fields should be changed or not"
	},
	"teamTasks.continue": {
		"string": "Continue"
	},
	"teamTasks.continueMetadata": {
		"string": "Edit field"
	},
	"teamTasks.deleteMetadata": {
		"string": "Delete field"
	},
	"teamTasks.filterLabel": {
		"string": "{total, plural, =0 {No tasks} one {1 task} other {# tasks}}"
	},
	"teamTasks.filterLabelHidden": {
		"string": "{total, plural, =0 {No tasks} one {1 task ({hidden} hidden by filters)} other {# tasks ({hidden} hidden by filters)}}"
	},
	"teamTasksRender.blank": {
		"string": "No default tasks to display",
		"developer_comment": "Text for empty tasks"
	},
	"teamTasksRender.filter": {
		"string": "Filter tasks",
		"developer_comment": "Filter tasks"
	},
	"teamTasksRender.projFilter": {
		"string": "Show tasks in",
		"developer_comment": "filter tasks by projects"
	},
	"teamTasksRender.tasks": {
		"string": "Tasks",
		"developer_comment": "Tasks title"
	},
	"teamTasksRender.tasksSubtitle": {
		"string": "Add custom tasks to items.",
		"developer_comment": "Tasks subtitle"
	},
	"teamTasksRender.typeFilter": {
		"string": "Task type",
		"developer_comment": "filter tasks by type"
	},
	"teams.title": {
		"string": "Workspaces"
	},
	"teams.userTeams": {
		"string": "{name}'s workspaces"
	},
	"teams.yourTeams": {
		"string": "Workspaces"
	},
	"thresholdControl.matchingExplainer": {
		"string": "If the confidence score is above this ratio, items will be matched and reports automatically sent to users."
	},
	"thresholdControl.suggestionExplainer": {
		"string": "If the confidence score is above this ratio, items will be suggested as similar."
	},
	"thresholdControl.suggestionGreaterThanMatchingError": {
		"string": "The suggestion threshold cannot be higher than the matching one.",
		"developer_comment": "Error message displayed when suggestion threshold is set higher than value of matching threshold"
	},
	"tiplineInbox.title": {
		"string": "Tipline inbox"
	},
	"toolbar.viewModeLonger": {
		"string": "See longer titles",
		"developer_comment": "Tooltip for button that makes titles shorter"
	},
	"toolbar.viewModeShorter": {
		"string": "See shorter titles",
		"developer_comment": "Tooltip for button that makes titles shorter"
	},
	"tos.title": {
		"string": "Terms of Service"
	},
	"transcriptionButton.defaultErrorMessage": {
		"string": "Could not get transcription",
		"developer_comment": "Warning displayed if an error occurred when transcribing an audio or video file"
	},
	"transcriptionButton.inProgress": {
		"string": "Requesting transcription…",
		"developer_comment": "Message displayed when transcription operation hasn't started yet"
	},
	"transcriptionButton.label": {
		"string": "Transcription",
		"developer_comment": "Button label - when this button is clicked, transcription operation starts"
	},
	"transcriptionButton.textExtractedSuccessfully": {
		"string": "Transcription started, please come back in a few seconds to see it",
		"developer_comment": "Banner displayed when transcription operation starts"
	},
	"translateStatuses.continueAndSave": {
		"string": "Continue and save"
	},
	"translateStatuses.message": {
		"string": "Message"
	},
	"translateStatuses.missingTranslations": {
		"string": "Missing translations"
	},
	"translateStatuses.missingTranslationsBody": {
		"string": "Some statuses are missing translations. Users may not be able to read untranslated statuses."
	},
	"translateStatuses.missingTranslationsBody2": {
		"string": "If the message for a status is not translated in a language, any requester using that language will not receive the message."
	},
	"translateStatuses.status": {
		"string": "Status"
	},
	"trash.title": {
		"string": "Trash"
	},
	"trendItem.aboutThisClaim": {
		"string": "About this claim"
	},
	"trendItem.claimDescription": {
		"string": "Claims"
	},
	"trendItem.factCheck": {
		"string": "Fact-check",
		"developer_comment": "Middle column title on trends item page"
	},
	"trendItem.factCheckSummary": {
		"string": "Summary",
		"developer_comment": "Fact-check summary"
	},
	"trendItem.factCheckTitle": {
		"string": "Title",
		"developer_comment": "Fact-check title"
	},
	"trendItem.factCheckUrl": {
		"string": "Published article URL",
		"developer_comment": "Fact-check article URL"
	},
	"trendItem.import": {
		"string": "Import"
	},
	"trendItem.lastSubmitted": {
		"string": "Last submitted",
		"developer_comment": "A label indicating that the following date is when an item was last submitted to the tip line"
	},
	"trendItem.main": {
		"string": "Media"
	},
	"trendItem.media": {
		"string": "Similar media"
	},
	"trendItem.mediaRequests": {
		"string": "{number} tipline requests across all medias"
	},
	"trendItem.mediasColumnTitleAll": {
		"string": "{number} Medias across all organizations"
	},
	"trendItem.mediasColumnTitleSingle": {
		"string": "{number} Medias from {organizationName}"
	},
	"trendItem.noClaim": {
		"string": "No claim added yet"
	},
	"trendItem.noImportingClaim": {
		"string": "Select an organization to display available fact-check and annotations.",
		"developer_comment": "Message displayed on trends item page when no claim was selected."
	},
	"trendItem.noTags": {
		"string": "No tags.",
		"developer_comment": "Displayed on trends item page when item has no tags."
	},
	"trendItem.noTasks": {
		"string": "No completed annotations.",
		"developer_comment": "Displayed on trends item page when item has no completed annotations."
	},
	"trendItem.notPublished": {
		"string": "Not published yet"
	},
	"trendItem.publishedAt": {
		"string": "Report published: {date}"
	},
	"trendItem.rating": {
		"string": "Rating: {rating}"
	},
	"trendItem.request": {
		"string": "Request",
		"developer_comment": "A label that appears alongside a number showing the number of requests an item has received. This is the singular noun for use when it is a single request, appearing in English as '1 request'."
	},
	"trendItem.requests": {
		"string": "Requests",
		"developer_comment": "A label that appears alongside a number showing the number of requests an item has received. This is the plural noun for use when there are zero or more than one requests, appearing in English as '10 requests' or '0 requests'."
	},
	"trendItem.sortBy": {
		"string": "Sort by"
	},
	"trends.title": {
		"string": "Shared database"
	},
	"trendsItem.completedAnnotations": {
		"string": "Completed annotations"
	},
	"trendsItem.couldNotImport": {
		"string": "We could not import the claim because the media associated with this claim already exist in this workspace"
	},
	"trendsItem.factCheck": {
		"string": "Fact-check"
	},
	"trendsItem.importDescription": {
		"string": "A new claim will be created in your workspace with media.",
		"developer_comment": "Dialog description when importing a claim from trends page."
	},
	"trendsItem.importSelectLabel": {
		"string": "Import to workspace",
		"developer_comment": "Select field label used in import claim dialog from trends page."
	},
	"trendsItem.importTextLabel": {
		"string": "Claim description",
		"developer_comment": "Text field label used in import claim dialog from trends page."
	},
	"trendsItem.importTitle": {
		"string": "Import data to workspace",
		"developer_comment": "Dialog title when importing a claim from trends page."
	},
	"trendsItem.importedSuccessfully": {
		"string": "Claim successfully imported to {workspaceName} workspace"
	},
	"trendsItem.importingQuestion": {
		"string": "What content do you want to import?",
		"developer_comment": "Question in trends page importing modal"
	},
	"trendsItem.proceedImport": {
		"string": "Import",
		"developer_comment": "Button label to confirm importing claim from trends page"
	},
	"trendsItem.tags": {
		"string": "Tags"
	},
	"unconfirmed.title": {
		"string": "Unconfirmed"
	},
	"uploadFile.audioMessage": {
		"string": "Drop an audio file here, or click to upload a file (max size: {audio_max_size}, allowed extensions: {audio_extensions})"
	},
	"uploadFile.changeFile": {
		"string": "{filename} (click or drop to change)"
	},
	"uploadFile.fileMessage": {
		"string": "Drop a file here, or click to upload a file (max size: {file_max_size}, allowed extensions: {file_extensions})"
	},
	"uploadFile.fileTooLarge": {
		"string": "The file size should be less than {size}. Please try with a smaller file."
	},
	"uploadFile.imageVideoAudioMessage": {
		"string": "Drop a file here, or click to upload a file (max size: {file_max_size}, allowed extensions: {file_extensions})"
	},
	"uploadFile.invalidExtension": {
		"string": "The file cannot have type \"{extension}\". Please try with the following file types: {allowed_types}."
	},
	"uploadFile.message": {
		"string": "Drop an image file here, or click to upload a file (max size: {upload_max_size}, allowed extensions: {upload_extensions}, allowed dimensions between {upload_min_dimensions} and {upload_max_dimensions} pixels)"
	},
	"uploadFile.videoMessage": {
		"string": "Drop a video file here, or click to upload a file (max size: {video_max_size}, allowed extensions: {video_extensions})"
	},
	"userAssignments.blank": {
		"string": "No activity"
	},
	"userAssignments.filterByTeam": {
		"string": "Filter by workspace"
	},
	"userComponent.teams": {
		"string": "Workspaces"
	},
	"userComponents.assignments": {
		"string": "Assignments"
	},
	"userComponents.privacy": {
		"string": "Privacy"
	},
	"userComponents.security": {
		"string": "Security"
	},
	"userConfirmPage.signIn": {
		"string": "Sign In",
		"developer_comment": "Sign in button"
	},
	"userConfirmed.alreadyConfrimMessage": {
		"string": "Oops! Your account is already confirmed. Please sign in to get started.",
		"developer_comment": "Message for user who already confirmed before"
	},
	"userConfirmed.confrimMessage": {
		"string": "Thanks for confirming your email address! Now you can sign in.",
		"developer_comment": "Message for confirmed user"
	},
	"userConfirmed.unConfrimMessage": {
		"string": "Sorry, an error occurred while confirming your account. Please try again and contact {supportEmail} if the condition persists.",
		"developer_comment": "Message for unconfirmed users"
	},
	"userEmail.emailInputHint": {
		"string": "email@example.com"
	},
	"userEmail.emailInputLabel": {
		"string": "Email"
	},
	"userEmail.skip": {
		"string": "Skip"
	},
	"userEmail.submit": {
		"string": "Submit"
	},
	"userEmail.text": {
		"string": "To send you notifications, we need your email address. If you'd like to receive notifications, please enter your email address. Otherwise, click \"Skip\""
	},
	"userEmail.title": {
		"string": "Add your email"
	},
	"userInfo.dateJoined": {
		"string": "Joined {date}"
	},
	"userInfo.teamsCount": {
		"string": "{teamsCount, plural, one {# workspace} other {# workspaces}}"
	},
	"userInfoEdit.addLink": {
		"string": "Add Link"
	},
	"userInfoEdit.addLinkHelper": {
		"string": "Add a link to a web page or social media profile. Note: this does not affect your login method."
	},
	"userInfoEdit.addLinkLabel": {
		"string": "Add a link"
	},
	"userInfoEdit.editError": {
		"string": "Sorry, an error occurred while updating your profile. Please try again and contact {supportEmail} if the condition persists."
	},
	"userInfoEdit.emailConfirmed": {
		"string": "✔ Address confirmed"
	},
	"userInfoEdit.emailPendingConfirm": {
		"string": "⚠ Confirmation pending"
	},
	"userInfoEdit.invalidLink": {
		"string": "Please enter a valid URL"
	},
	"userInfoEdit.nameError": {
		"string": "Name can't be blank"
	},
	"userInfoEdit.sourceBio": {
		"string": "Bio"
	},
	"userInfoEdit.sourceName": {
		"string": "പേര്"
	},
	"userInfoEdit.userEmail": {
		"string": "Email"
	},
	"userInfoEdit.userSendEmailNotification": {
		"string": "Receive email notifications"
	},
	"userPrivacy.connectedAccounts": {
		"string": "Connected accounts"
	},
	"userPrivacy.delete": {
		"string": "Delete your account"
	},
	"userPrivacy.deleteAccountButton": {
		"string": "Delete my account"
	},
	"userPrivacy.deleteAccountConfirmationText": {
		"string": "Are you sure? This will remove your account and log you out of the app."
	},
	"userPrivacy.deleteAccountText": {
		"string": "If you delete your account, your personal information will be erased. Comments, annotations, and workspace activity will become pseudonymous and remain on {appName}."
	},
	"userPrivacy.description": {
		"string": "Please review our {ppLink} to learn how {appName} uses and stores your information."
	},
	"userPrivacy.ppLink": {
		"string": "Privacy Policy"
	},
	"userPrivacy.seeInformationButton": {
		"string": "See my information"
	},
	"userPrivacy.seeInformationText": {
		"string": "We will send you a file with the content and data you created and generated on {appName}. This can be kept for your records or transferred to another service."
	},
	"userPrivacy.stopProcessingButton": {
		"string": "Request to stop processing"
	},
	"userPrivacy.stopProcessingText": {
		"string": "You can request {appName} to stop processing your information under certain conditions."
	},
	"userPrivacy.title": {
		"string": "Your information"
	},
	"userSecurity.authenticateDescription": {
		"string": "Enter your current password to confirm your identity:"
	},
	"userSecurity.authenticateHeader": {
		"string": "Step 1: Authenticate"
	},
	"userSecurity.backupDescription": {
		"string": "We strongly suggest that you generate and print backup codes using the button below. These are single-use codes to be used instead of 2FA login in the event that you lose access to your 2FA device."
	},
	"userSecurity.backupHeader": {
		"string": "Step 4: Backup codes"
	},
	"userSecurity.backupNote": {
		"string": "Note: Existing backup codes will be invalidated by clicking this button."
	},
	"userSecurity.changePassword": {
		"string": "Change password"
	},
	"userSecurity.disableAuthenticateDescription": {
		"string": "Enter your password to disable two-factor authentication:"
	},
	"userSecurity.disableTwofactor": {
		"string": "Disable"
	},
	"userSecurity.downloadDescription": {
		"string": "You'll need a two-factor app, like Google Authenticator, on your smartphone to proceed:"
	},
	"userSecurity.downloadHeader": {
		"string": "Step 2: Download"
	},
	"userSecurity.enableTwofactor": {
		"string": "Enable"
	},
	"userSecurity.failedfulLoginText": {
		"string": "Receive a notification for {loginTrial} consecutive failed login attempts"
	},
	"userSecurity.generateGackup": {
		"string": "Generate backup code"
	},
	"userSecurity.notification": {
		"string": "Notification"
	},
	"userSecurity.qrcodeDescription": {
		"string": "Using your two-factor app, scan this QR code:"
	},
	"userSecurity.qrcodeHeader": {
		"string": "Step 3: Scan"
	},
	"userSecurity.requireTwoFactorAuth": {
		"string": "Require two-factor authentication"
	},
	"userSecurity.successfulLoginText": {
		"string": "Receive a notification for logins from a new location or device"
	},
	"userSecurity.suggestTwoFactorForSocialAccounts": {
		"string": "In order to enable 2FA, you need to create a password on Check. Please do so in the 'Change password' section below."
	},
	"userSecurity.twoFactorAuthentication": {
		"string": "Two factor authentication"
	},
	"userSecurity.verifyDescription": {
		"string": "To enable two-factor authentication, enter the 6-digit code from your two-factor app:"
	},
	"userSecurity.verifyHeader": {
		"string": "Step 5: Verify"
	},
	"userTooltip.dateJoined": {
		"string": "Joined {date} • {teamsCount, plural, =0 {No workspaces} one {1 workspace} other {# workspaces}}"
	},
	"userTos.agreeTos": {
		"string": "I agree to the Terms of Service."
	},
	"userTos.commGuidelines": {
		"string": "We ask that you also read our {communityGuidelinesLink} for using {appName}."
	},
	"userTos.commGuidelinesLink": {
		"string": "Community Guidelines"
	},
	"userTos.disclaimer": {
		"string": "Please review our {tosLink} and our {ppLink} and consent to the following:"
	},
	"userTos.disclaimerUpdate": {
		"string": "We've updated our {tosLink} and our {ppLink}. Please review and consent to the following:"
	},
	"userTos.ppLink": {
		"string": "Privacy Policy"
	},
	"userTos.save": {
		"string": "Save"
	},
	"userTos.termsLastUpdatedAt": {
		"string": "Last updated {lastUpdated}"
	},
	"userTos.title": {
		"string": "Terms of Service and Privacy Policy"
	},
	"userTos.titleUpdated": {
		"string": "Updated Terms and Privacy Policy"
	},
	"userTos.tosLink": {
		"string": "Terms of Service"
	},
	"userTos.validation": {
		"string": "You must agree to the Terms of Service and Privacy Policy"
	},
	"valueListCell.more": {
		"string": "+{number} more",
		"developer_comment": "Button to maximize list display (tags, urls, checked options) with all values within a table cell"
	},
	"viewModeSwitcher.viewModeLonger": {
		"string": "See longer titles",
		"developer_comment": "Tooltip for button that makes titles shorter"
	},
	"viewModeSwitcher.viewModeShorter": {
		"string": "See shorter titles",
		"developer_comment": "Tooltip for button that makes titles shorter"
	},
	"webPageMediaCard.Error": {
		"string": "This item could not be identified. It may have been removed, or may only be visible to users who are logged in. Click the link above to navigate to it."
	}
}